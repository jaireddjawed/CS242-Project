[
    {
        "title": "Need help:)",
        "author": "ADDLQ",
        "url": "https://www.reddit.com/r/programminghorror/comments/4420br/need_help/",
        "text": "[removed]",
        "created_utc": 1454535276,
        "upvote_ratio": ""
    },
    {
        "title": "Being totally sure the program exits",
        "author": "Terazilla",
        "url": "https://www.reddit.com/r/programminghorror/comments/43xvii/being_totally_sure_the_program_exits/",
        "text": "We're working on a porting project, and noticed it crashed on exit on our new platform.  Upon examination we found this in the exit path.\n\n    if( Application.platform == WINDOWS )\n        System.Diagnostics.Process.GetCurrentProcess().Kill(); \n    else\n        Debug.Break();\n",
        "created_utc": 1454468710,
        "upvote_ratio": ""
    },
    {
        "title": "Great technologist has earth shattering messaging system architecture",
        "author": "kylixz",
        "url": "https://www.reddit.com/r/programminghorror/comments/43xd9l/great_technologist_has_earth_shattering_messaging/",
        "text": "Senior team member has the solution to all of our problems for a distributed system on the JVM. We must listen to him.\n\n    public interface IInMessage {\n    \n    \tString toString();\n    }\n\n    public interface IOutMessage {\n    \n    \tString toString();\n    }\n\n    public class Message implements IInMessage, IOutMessage {\n\n\t    private String to;\n\t    private String from;\n\t    \n\t    public Message(String from, String to) {\n\t\t\n\t    \tthis.to = to;\n\t    \tthis.from = from;\n\t    }\n\t\n\t    public String toString() {\n\t    \t\n\t    \treturn \"Hey there, \" + to + \" from \" + from + \"!\";\n\t    }\n    }\n\nAnd port to go, because go is better at distributed messaging. Which... I get that consul and other great tools exist, but not problem we are trying to solve here. I asked if those were just tag interfaces... blank stare. Described toString() as necessary so we can serialize.",
        "created_utc": 1454461377,
        "upvote_ratio": ""
    },
    {
        "title": "Best authorization check",
        "author": "evuez",
        "url": "https://www.reddit.com/r/programminghorror/comments/43thhk/best_authorization_check/",
        "text": "I found this in a controller of a project at work:\n\n    public function isAuthorized($user = null) {\n        return TRUE;\n    }\n\nAt first I thought it was an overload to \"authorize\" anyone in this particular controller but then...\n\n    class AppController { // single parent class of every controllers\n        public function isAuthorized($user = NULL) {\n            return true;\n        }\n    }\n\nFinally I found that this method was defined in many other controllers, but none of the implementation returned anything else but `true` (well I did find a `return 1` and some more `TRUE` but that's it).\n\nA `git blame` informed me that there was only one person to blame for this, and he did this in a single commit with a nice and useful message: \"dump OK\". Alas he doesn't work here anymore, so the reason why he did that will remain a mystery.",
        "created_utc": 1454404469,
        "upvote_ratio": ""
    },
    {
        "title": "URL Variables? I got something better...",
        "author": "kurashu89",
        "url": "https://www.reddit.com/r/programminghorror/comments/42gvs1/url_variables_i_got_something_better/",
        "text": "    @app.route(\"/views\n    @app.route(\"/views/Logs_Messages\n    @app.route(\"/views/Content_Sources\n    @app.route(\"/views/Bitrates_HD_Encoder\n    @app.route(\"/views/Hardware_Status_eCMM\n    @app.route(\"/views/Bitrates_Per_Program\n    @app.route(\"/views/Content_OOB_SI\n    @app.route(\"/views/Debug_Dump\n    @app.route(\"/views/Hardware_Status_In_Band_Tuners\n    @app.route(\"/views/Alarms_Current\n    @app.route(\"/views/Version_Information\n    @app.route(\"/views/Software_Status_License\n    @app.route(\"/views/Hardware_Status_Module_Presence\n    @app.route(\"/views/Reboot\n    @app.route(\"/views/Content_Mappings\n    @app.route(\"/views/Logs_Persistent\n    @app.route(\"/views/Content_Routing\n    @app.route(\"/views/Software_Status_Transcoder_Enabled\n    @app.route(\"/views/Software_Status_Code_Download\n    @app.route(\"/views/Decryption_Identification\n    @app.route(\"/views/Hardware_Status_System_Monitoring\n    @app.route(\"/views/Software_Status_Operating_System_Stats\n    @app.route(\"/views/Software_Status_TLV\n    @app.route(\"/views/Hardware_Status_Out_of_Band_Tuner\n    @app.route(\"/views/Content_EPG\n    @app.route(\"/views/Hardware_Status_HD_Encoders\n    @app.route(\"/views/Alarms_History\n    @app.route(\"/views/Bitrates_Output\n    @app.route(\"/views/Decryption_Status\n    @app.route(\"/views/Bitrates_Input\n    @app.route(\"/views/Software_Status_EPG_Download\n    @app.route(\"/views/Interfaces\n    @app.route(\"/views/Hardware_Status_Output_Module\n    @app.route(\"/views/Logs_Messages\n    @app.route(\"/views/Content_Sources\n    @app.route(\"/views/Bitrates_HD_Encoder\n    @app.route(\"/views/Hardware_Status_eCMM\n    @app.route(\"/views/Bitrates_Per_Program\n    @app.route(\"/views/Content_OOB_SI\n    @app.route(\"/views/Debug_Dump\n    @app.route(\"/views/Hardware_Status_In_Band_Tuners\n    @app.route(\"/views/Alarms_Current\n    @app.route(\"/views/Version_Information\n    @app.route(\"/views/Software_Status_License\n    @app.route(\"/views/Hardware_Status_Module_Presence\n    @app.route(\"/views/Reboot\n    @app.route(\"/views/Content_Mappings\n    @app.route(\"/views/Logs_Persistent\n    @app.route(\"/views/Content_Routing\n    @app.route(\"/views/Software_Status_Transcoder_Enabled\n    @app.route(\"/views/Software_Status_Code_Download\n    @app.route(\"/views/Decryption_Identification\n    @app.route(\"/views/Hardware_Status_System_Monitoring\n    @app.route(\"/views/Software_Status_Operating_System_Stats\n    @app.route(\"/views/Software_Status_TLV\n    @app.route(\"/views/Hardware_Status_Out_of_Band_Tuner\n    @app.route(\"/views/Content_EPG\n    @app.route(\"/views/Hardware_Status_HD_Encoders\n    @app.route(\"/views/Alarms_History\n    @app.route(\"/views/Bitrates_Output\n    @app.route(\"/views/Decryption_Status\n    @app.route(\"/views/Bitrates_Input\n    @app.route(\"/views/Software_Status_EPG_Download\n    @app.route(\"/views/Interfaces\n    @app.route(\"/views/Hardware_Status_Output_Module\n    @auth.login_required\n    def index():\n        with file(\"./curldata/\" + str(request.url_rule).replace(\"/views/\",\"\").replace(\"/\",\"\") + \".json\") as f:\n            datafile = f.read()\n        return datafile",
        "created_utc": 1453658696,
        "upvote_ratio": ""
    },
    {
        "title": "Guys I need HALP",
        "author": "Dr-Dewritos",
        "url": "https://www.reddit.com/r/programminghorror/comments/42gj6k/guys_i_need_halp/",
        "text": "[removed]",
        "created_utc": 1453653715,
        "upvote_ratio": ""
    },
    {
        "title": "Here's how to generate random numbers",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/424h44/heres_how_to_generate_random_numbers/",
        "text": "[deleted]",
        "created_utc": 1453446582,
        "upvote_ratio": ""
    },
    {
        "title": "One minus negative one plus one.",
        "author": "Treyzania",
        "url": "https://www.reddit.com/r/programminghorror/comments/41whq6/one_minus_negative_one_plus_one/",
        "text": "This code was committed to a project I've been working on with two other people.\n\nThe project a plugin for Spigot, a 3rd party community-made Minecraft server software.  This code is designed to make blocks from the `List` returned by `event.blockList()` fly into the air.  The event gets passed to us when an explosion takes place.\n\n    for (Block b : event.blockList()) {\n        \n        float x = -1 + (float) (Math.random() * ((1 - -1) + 1));\n        float y = -1 + (float) (Math.random() * ((1 - -1) + 1));\n        float z = -1 + (float) (Math.random() * ((1 - -1) + 1));\n        \n        FallingBlock fallingBlock = b.getWorld().spawnFallingBlock(b.getLocation(), b.getType(), b.getData());\n        fallingBlock.setDropItem(false);\n        fallingBlock.setVelocity(new Vector(x, y, z));\n        \n        b.setType(Material.AIR);\n        \n    }\n\nAlso both `World.spawnFallingBlock` and `Block.getData` are deprecated.  Fortunately this project is almost done.",
        "created_utc": 1453325554,
        "upvote_ratio": ""
    },
    {
        "title": "0 dollar gift card = 5-minute register reboot",
        "author": "cadev",
        "url": "https://www.reddit.com/r/programminghorror/comments/41vuks/0_dollar_gift_card_5minute_register_reboot/",
        "text": "[removed]",
        "created_utc": 1453317267,
        "upvote_ratio": ""
    },
    {
        "title": "I really procrastinated",
        "author": "thawookies",
        "url": "https://www.reddit.com/r/programminghorror/comments/41s7sb/i_really_procrastinated/",
        "text": "The university my Mom works at was doing a display for the state fair and I volunteered to design an interactive head which lit up when touched. The hardware was fairly difficult, so the night before the fair, I who had never written any code in any language ever, decided to begin programming. Sure, there were basically 10 analog sensors which needed to communicate with the Arduino I was using and be in an off or on position, but knowing nothing of electronics, and nothing whatsoever of C, this is an excerpt of the beauty that I came up with;\n\"   if (bh &lt; 200);{\n    bool val2a = true;}\n  if (bb == 0);{\n    bool val2= false;}\n\" \nYou can see the dreaded phantom semicolon, making my if statement useless. I also didn't know what semicolons were at one point, because I nested the if statements to determine button state.\n\"   \nif (ih &gt; 50);{\n      digitalWrite (mosfet, HIGH);\n      delay(500);\n      digitalWrite (mosfet, LOW);}\n  if (ib == 0);{\n    \n  int jb = digitalRead(11);\n    Serial.println(jb);\n  delay(5);   \n  if (jb == 1);{\nint jh = analogRead(jh);\n\n    if (ch &gt; 50);{\n      digitalWrite (mosfet, HIGH);\n      delay(500);\n      digitalWrite (mosfet, LOW);}\n  if (jb == 0);{\n    delay(10);\n  }\n}\n  }\n}\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n  }\n}\n\"\nThis would have made it so that if I wanted to activate sensor jb, I would have to activate aa,ab,ba,bb,ca,cb, etc.\nKnowing nothing of Murphy's law, I failed and the display had to be manually operated. This was me in September. Today I could successfully implement a working code in about 5 minutes and am doing 3d graphics in Java.\nWhen learning something new, fail, fail miserably, but don't give up.",
        "created_utc": 1453257118,
        "upvote_ratio": ""
    },
    {
        "title": "My co-worker calls this a model.",
        "author": "oktupol",
        "url": "https://www.reddit.com/r/programminghorror/comments/41pgb1/my_coworker_calls_this_a_model/",
        "text": "http://pastebin.com/1CscuuFS\n\nHe is also that guy that gets the strangest errors and always blames php. I don't know who to blame if he is the only guy in the company who's code causes such strange errors.",
        "created_utc": 1453221691,
        "upvote_ratio": ""
    },
    {
        "title": "How to make your development team look like total morons with a single line of code on your public web site.",
        "author": "ElGuaco",
        "url": "https://www.reddit.com/r/programminghorror/comments/41h7js/how_to_make_your_development_team_look_like_total/",
        "text": "I worked briefly for a financial institution, partly because of stories like this one. It was just large enough to have a very small team of developers. The lead developer had been there longer than anyone, and was probably responsible for most of the mess. The debacle below lowered my opinion of him and that team faster than I could think possible.\n\nOne day my manager assigned me a ticket for our public web site which was down. I immediately dropped what I was doing looking to save the day and gain kudos from my new team members. What I discovered horrified me. The web site was emitting .NET debugging details on the error instead of having a custom error page. It turned out that the code was not being kept in a repository. The only other copy of the code was on the lead dev's computer, and the dev server. When running the site on the dev server, it was failing too, and both had been fine the day before. This could only mean one thing: we had an external dependency somewhere. The few pages on this fairly small ASP.NET site were coded primarily inside the Page_Load method of each web form. No other classes or methods, so it didn't take long to find the culprit. Buried in the Master Page (800+ lines) was code to retrieve stock ticker information, a URL which delivered an XML file, which was data bound to a web control without any kind of error checking at all. So this external site was either down or had changed which brought down our entire site. It took me about 60 seconds to write a try/catch block.\n\nI then politely suggested that my manager let me spend a little time putting together a proper error page so the entire company (and especially us) didn't look like complete idiots. \"Can you do that? How long will it take?\" \n\nThat wasn't even the final straw that led me to start looking for a new job.\n\n",
        "created_utc": 1453089836,
        "upvote_ratio": ""
    },
    {
        "title": "I'm just going to find my zip code...",
        "author": "aSecretSin",
        "url": "https://www.reddit.com/r/programminghorror/comments/41e9rn/im_just_going_to_find_my_zip_code/",
        "text": "Saw this on /r/recruitinghell\n\nGo to [this website](http://www.goldmaxusa.com/) and put in any zip code. Enjoy the horror.\n\nI don't want to ruin the surprise for anyone so the code required in every post can be seen [here](http://i.imgur.com/k2JIAuE.gifv)\n\nRelated post/where I found this is [here](https://www.reddit.com/r/recruitinghell/comments/41cgbg/human_billboard_some_recruiters_really_hate/)",
        "created_utc": 1453049301,
        "upvote_ratio": ""
    },
    {
        "title": "There is no backspace",
        "author": "Voultapher",
        "url": "https://www.reddit.com/r/programminghorror/comments/41alar/there_is_no_backspace/",
        "text": "https://youtu.be/t4e7PjRygt0?t=12m32s\n\nHorror as in imagine having to use this as daily driver.\n\nAwesome as example of what is possible inside minecraft.",
        "created_utc": 1452982619,
        "upvote_ratio": ""
    },
    {
        "title": "Clearly the best way to print strings",
        "author": "ertjaet",
        "url": "https://www.reddit.com/r/programminghorror/comments/40yzc9/clearly_the_best_way_to_print_strings/",
        "text": "Over the summer, I had a co-op position at an engineering firm. I was tasked with updating the C code for a handheld control unit. One of the elements of the unit was a two-line, 26-character LCD display, that displayed a selection of status messages. I was going through the code that displayed the messages, and I found something... interesting. At the top of the file, there was this selection:\n\n    #define Axx 0x41\n    #define Bxx 0x42\n    #define Cxx 0x43\n    #define Dxx 0x44\n    #define Exx 0x45\n    #define Fxx 0x46\n    #define Gxx 0x47\n    ...etc\nWhoever had written this system had \\#define'd every single uppercase letter as its ASCII code, in hexadecimal. To make it worse, each status message was printed like this:\n\n    void WriteVersion() {\n        SendChar(Vxx);\n        SendChar(Exx);\n        SendChar(Rxx);\n        SendChar(Sxx);\n        SendChar(Ixx);\n        SendChar(Oxx);\n        SendChar(Nxx);\n    }\nNow, me, being new to this project, didn't immediately remove all this code, in case there was some good reason for doing it this way. Instead, I wrote a simple \n\n    WriteString()\nfunction that would write a given C string, character by character, to the display, using each character as its decimal value. I replaced one of the calls to \n\n    WriteVersion()\nwith \n\n    WriteString(\"VERSION\")\njust to see how it went. Compiled the code, uploaded it to the unit, ran the command to check the version number. \"VERSION\" appears, plain as day. As far as I could tell, whoever had written it before just... didn't get strings?\n\n\n",
        "created_utc": 1452797498,
        "upvote_ratio": ""
    },
    {
        "title": "What's the most retarded shit you've seen at work?",
        "author": "mlk",
        "url": "https://www.reddit.com/r/programminghorror/comments/40wsdy/whats_the_most_retarded_shit_youve_seen_at_work/",
        "text": "I'll start: a rich client application (eclipse) that starts an embedded webserver and then opens an embedded browser that connects to the embedded webserver to display a Flex application.\n\nAnd no, it wasn't a port of a web application to application to a rich client one, it started like that because the PM thought Flex was aesthetically nicer.",
        "created_utc": 1452760849,
        "upvote_ratio": ""
    },
    {
        "title": "How not to polymorph",
        "author": "exclipsesapphire",
        "url": "https://www.reddit.com/r/programminghorror/comments/40whju/how_not_to_polymorph/",
        "text": "This is real production code(minus some name alterations). No I am not kidding. No this will not be fixed. \n\n\tPublic MustInherit Class BUClass\n\t\t' some other stuff thats not important\n\n\t\tPublic MustOverride Function GetMemberType1(ByVal iCifNo As Integer, _\n\t\t\t\t\t\t\t\t  ByRef iCustNo As Integer, _\n\t\t\t\t\t\t\t\t  ByRef sBranch As String, ByRef sBenefit As String, _\n\t\t\t\t\t\t\t\t  ByRef sTitle As String, ByRef sGender As String, _\n\t\t\t\t\t\t\t\t  ByRef sSurname As String, ByRef sUsual As String, _\n\t\t\t\t\t\t\t\t  ByRef sName As String, ByRef sMiddle As String, _\n\t\t\t\t\t\t\t\t  ByRef dtBirth As Date, ByRef sSin As String, _\n\t\t\t\t\t\t\t\t  ByRef sIDDetail As String, ByRef sMaritalStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmployer As String, ByRef shPB As Short, _\n\t\t\t\t\t\t\t\t  ByRef shDependents As Short, ByRef sReasonOpened As String, _\n\t\t\t\t\t\t\t\t  ByRef dtDateJoined As Date, _\n\t\t\t\t\t\t\t\t  ByRef sCareOf As String, _\n\t\t\t\t\t\t\t\t  ByRef sAddrLine1 As String, ByRef sAddrLine2 As String, _\n\t\t\t\t\t\t\t\t  ByRef sAddrLine3 As String, ByRef sPostal As String, _\n\t\t\t\t\t\t\t\t  ByRef sProv As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmail As String, ByRef sHomeArea As String, _\n\t\t\t\t\t\t\t\t  ByRef sHomePhone As String, _\n\t\t\t\t\t\t\t\t  ByRef sBusArea As String, ByRef sBusPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef dtEmployment As Date, ByRef sPosition As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmplAddress As String, ByRef dtResDate As Date, _\n\t\t\t\t\t\t\t\t  ByRef sResStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sCellArea As String, ByRef sCellPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef dtMemberSince As Date, _\n\t\t\t\t\t\t\t\t  ByRef sJobTitle As String, ByRef sEmplStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sErrorMessage As String, _\n\t\t\t\t\t\t\t\t  Optional ByRef sIDType As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sAware As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sCountry As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sPhone2Type As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sPEFP As String = \"\") As Boolean\n\n\t\tPublic MustOverride Function GetMemberType2(ByVal iCifNo As Integer, _\n\t\t\t\t\t\t\t\t ByRef sBranch As String, ByRef sBenefit As String, _\n\t\t\t\t\t\t\t\t ByRef sTitle As String, ByRef sGender As String, _\n\t\t\t\t\t\t\t\t ByRef sSurname As String, ByRef sUsual As String, _\n\t\t\t\t\t\t\t\t ByRef sName As String, ByRef sMiddle As String, _\n\t\t\t\t\t\t\t\t ByRef dtBirth As Date, ByRef sSin As String, _\n\t\t\t\t\t\t\t\t ByRef sIDDetail As String, ByRef sIDType As String, _\n\t\t\t\t\t\t\t\t ByRef sIDRegion As String, ByRef sIDCountry As String, _\n\t\t\t\t\t\t\t\t ByRef sMaritalStatus As String, _\n\t\t\t\t\t\t\t\t ByRef sEmployer As String, ByRef shPB As Short, _\n\t\t\t\t\t\t\t\t ByRef shDependents As Short, ByRef sReasonOpened As String, _\n\t\t\t\t\t\t\t\t ByRef dtDateJoined As Date, ByRef sAwareness As String, _\n\t\t\t\t\t\t\t\t ByRef bIsStandard As Boolean, ByRef sCareOf As String, _\n\t\t\t\t\t\t\t\t ByRef sUnitType As String, ByRef sUnitNo As String, _\n\t\t\t\t\t\t\t\t ByRef sStreetNo As String, ByRef sStreetName As String, _\n\t\t\t\t\t\t\t\t ByRef sStreetType As String, ByRef sStreetDir As String, _\n\t\t\t\t\t\t\t\t ByRef sDvMode1 As String, ByRef sDvMode1No As String, _\n\t\t\t\t\t\t\t\t ByRef sDvMode2 As String, ByRef sDvMode2No As String, _\n\t\t\t\t\t\t\t\t ByRef sCity As String, ByRef sPostal As String, _\n\t\t\t\t\t\t\t\t ByRef sProv As String, ByRef sCountry As String, _\n\t\t\t\t\t\t\t\t ByRef sEmail As String, ByRef sHomeArea As String, _\n\t\t\t\t\t\t\t\t ByRef sHomePhone As String, _\n\t\t\t\t\t\t\t\t ByRef sBusArea As String, ByRef sBusPhone As String, _\n\t\t\t\t\t\t\t\t ByRef sIDDetail2 As String, ByRef sIDDetail3 As String, _\n\t\t\t\t\t\t\t\t ByRef sPEFP As String, ByRef sPosition As String, _\n\t\t\t\t\t\t\t\t ByRef sEmplAddr1 As String, ByRef sEmplAddr2 As String, _\n\t\t\t\t\t\t\t\t ByRef sEmplCity As String, ByRef sEmplPC As String, _\n\t\t\t\t\t\t\t\t ByRef sEmplRegion As String, ByRef sEmplCountry As String, _\n\t\t\t\t\t\t\t\t ByRef sEmplArea As String, ByRef sEmplPhone As String, _\n\t\t\t\t\t\t\t\t ByRef dtEmplSince As Date, ByRef iEmplRowno As Integer, _\n\t\t\t\t\t\t\t\t ByRef sEmployer2 As String, _\n\t\t\t\t\t\t\t\t ByRef bEmpl2IsPrev As Boolean, ByRef sEmpl2Position As String, _\n\t\t\t\t\t\t\t\t ByRef sEmpl2Addr1 As String, ByRef sEmpl2Addr2 As String, _\n\t\t\t\t\t\t\t\t ByRef sEmpl2City As String, ByRef sEmpl2PC As String, _\n\t\t\t\t\t\t\t\t ByRef sEmpl2Region As String, ByRef sEmpl2Country As String, _\n\t\t\t\t\t\t\t\t ByRef sEmpl2Area As String, ByRef sEmpl2Phone As String, _\n\t\t\t\t\t\t\t\t ByRef dtEmpl2Since As Date, ByRef iEmpl2Rowno As Integer, _\n\t\t\t\t\t\t\t\t ByRef sErrorMessage As String) As Boolean\n\n\n\n\n\n\t\tPublic MustOverride Function ChangeMemberType1(ByRef iCifNo As Integer, _\n\t\t\t\t\t\t\t\t  ByRef iCustNo As Integer, _\n\t\t\t\t\t\t\t\t  ByVal sBranch As String, ByVal sBenefit As String, _\n\t\t\t\t\t\t\t\t  ByVal sTitle As String, ByVal sGender As String, _\n\t\t\t\t\t\t\t\t  ByVal sSurname As String, ByVal sUsual As String, _\n\t\t\t\t\t\t\t\t  ByVal sName As String, ByVal sMiddle As String, _\n\t\t\t\t\t\t\t\t  ByVal dtBirth As Date, ByVal sSin As String, _\n\t\t\t\t\t\t\t\t  ByVal sIDDetail As String, ByVal sMaritalStatus As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmployer As String, ByVal shPB As Short, _\n\t\t\t\t\t\t\t\t  ByVal shDependents As Short, ByVal sReasonOpened As String, _\n\t\t\t\t\t\t\t\t  ByVal sCareOf As String, _\n\t\t\t\t\t\t\t\t  ByVal sAddrLine1 As String, ByVal sAddrLine2 As String, _\n\t\t\t\t\t\t\t\t  ByVal sAddrLine3 As String, ByVal sPostal As String, _\n\t\t\t\t\t\t\t\t  ByVal sProv As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmail As String, ByVal sHomeArea As String, _\n\t\t\t\t\t\t\t\t  ByVal sHomePhone As String, _\n\t\t\t\t\t\t\t\t  ByVal sBusArea As String, ByVal sBusPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef dtEmployment As Date, ByRef sPosition As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmplAddress As String, ByRef dtResDate As Date, _\n\t\t\t\t\t\t\t\t  ByRef sResStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sCellArea As String, ByRef sCellPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef sJobTitle As String, ByRef sEmplStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef dtMemberSince As Date, _\n\t\t\t\t\t\t\t\t  ByRef sErrorMessage As String, _\n\t\t\t\t\t\t\t\t  Optional ByRef sIDType As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sAware As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sCountry As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sPhone2Type As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sPEFP As String = \"\", _\n\t\t\t\t\t  Optional iEmplNo As Integer = 0) As Boolean\n\n\t\tPublic MustOverride Function ChangeMemberType2(ByRef iCifNo As Integer, _\n\t\t\t\t\t\t\t\t  ByVal sBranch As String, ByVal sBenefit As String, _\n\t\t\t\t\t\t\t\t  ByVal sTitle As String, ByVal sGender As String, _\n\t\t\t\t\t\t\t\t  ByVal sSurname As String, ByVal sUsual As String, _\n\t\t\t\t\t\t\t\t  ByVal sName As String, ByVal sMiddle As String, _\n\t\t\t\t\t\t\t\t  ByVal dtBirth As Date, ByVal sSin As String, _\n\t\t\t\t\t\t\t\t  ByVal sIDDetail As String, _\n\t\t\t\t\t\t\t\t  ByVal sIDType As String, ByVal sIDRegion As String, ByVal sIDCountry As String, _\n\t\t\t\t\t\t\t\t  ByVal sMaritalStatus As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmployer As String, ByVal shPB As Short, _\n\t\t\t\t\t\t\t\t  ByVal shDependents As Short, ByVal sReasonOpened As String, _\n\t\t\t\t\t\t\t\t  ByVal sAwareness As String, ByVal sCareOf As String, _\n\t\t\t\t\t\t\t\t  ByVal sUnitType As String, ByVal sUnitNo As String, _\n\t\t\t\t\t\t\t\t  ByVal sStreetNo As String, ByVal sStreetName As String, _\n\t\t\t\t\t\t\t\t  ByVal sStreetType As String, ByVal sStreetDir As String, _\n\t\t\t\t\t\t\t\t  ByVal sDvMode1 As String, ByVal sDvMode1No As String, _\n\t\t\t\t\t\t\t\t  ByVal sDvMode2 As String, ByVal sDvMode2No As String, _\n\t\t\t\t\t\t\t\t  ByVal sCity As String, ByVal sPostal As String, _\n\t\t\t\t\t\t\t\t  ByVal sProv As String, ByVal sCountry As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmail As String, ByVal sHomeArea As String, _\n\t\t\t\t\t\t\t\t  ByVal sHomePhone As String, _\n\t\t\t\t\t\t\t\t  ByVal sBusArea As String, ByVal sBusPhone As String, _\n\t\t\t\t\t\t\t\t  ByVal sIDDetail2 As String, ByVal sIDDetail3 As String, _\n\t\t\t\t\t\t\t\t  ByVal sPEFP As String, ByVal sPosition As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmplAddr1 As String, ByVal sEmplAddr2 As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmplCity As String, ByVal sEmplPC As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmplRegion As String, ByVal sEmplCountry As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmplArea As String, ByVal sEmplPhone As String, _\n\t\t\t\t\t\t\t\t  ByVal dtEmplSince As Date, ByRef iEmplRowno As Integer, _\n\t\t\t\t\t\t\t\t  ByRef sEmployer2 As String, _\n\t\t\t\t\t\t\t\t  ByVal bEmpl2IsPrev As Boolean, ByVal sEmpl2Position As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmpl2Addr1 As String, ByVal sEmpl2Addr2 As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmpl2City As String, ByVal sEmpl2PC As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmpl2Region As String, ByVal sEmpl2Country As String, _\n\t\t\t\t\t\t\t\t  ByVal sEmpl2Area As String, ByVal sEmpl2Phone As String, _\n\t\t\t\t\t\t\t\t  ByVal dtEmpl2Since As Date, ByRef iEmpl2Rowno As Integer, _\n\t\t\t\t\t\t\t\t  ByRef sErrorMessage As String) As Boolean\n\tEnd Class\n\n\tPublic Class Type2\n\t\tInherits BUClass\n\n\t\tPublic Overrides Function GetMemberType2(ByVal iCifNo As Integer, _\n\t\t\t\t\t\t\t\t  ByRef sBranch As String, ByRef sBenefit As String, _\n\t\t\t\t\t\t\t\t  ByRef sTitle As String, ByRef sGender As String, _\n\t\t\t\t\t\t\t\t  ByRef sSurname As String, ByRef sUsual As String, _\n\t\t\t\t\t\t\t\t  ByRef sName As String, ByRef sMiddle As String, _\n\t\t\t\t\t\t\t\t  ByRef dtBirth As Date, ByRef sSin As String, _\n\t\t\t\t\t\t\t\t  ByRef sIDDetail As String, _\n\t\t\t\t\t\t\t\t  ByRef sIDType As String, ByRef sIDRegion As String, ByRef sIDCountry As String, _\n\t\t\t\t\t\t\t\t  ByRef sMaritalStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmployer As String, ByRef shPB As Short, _\n\t\t\t\t\t\t\t\t  ByRef shDependents As Short, ByRef sReasonOpened As String, _\n\t\t\t\t\t\t\t\t  ByRef dtDateJoined As Date, ByRef sAwareness As String, _\n\t\t\t\t\t\t\t\t  ByRef bIsStandard As Boolean, ByRef sCareOf As String, _\n\t\t\t\t\t\t\t\t  ByRef sUnitType As String, ByRef sUnitNo As String, _\n\t\t\t\t\t\t\t\t  ByRef sStreetNo As String, ByRef sStreetName As String, _\n\t\t\t\t\t\t\t\t  ByRef sStreetType As String, ByRef sStreetDir As String, _\n\t\t\t\t\t\t\t\t  ByRef sDvMode1 As String, ByRef sDvMode1No As String, _\n\t\t\t\t\t\t\t\t  ByRef sDvMode2 As String, ByRef sDvMode2No As String, _\n\t\t\t\t\t\t\t\t  ByRef sCity As String, ByRef sPostal As String, _\n\t\t\t\t\t\t\t\t  ByRef sProv As String, ByRef sCountry As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmail As String, ByRef sHomeArea As String, _\n\t\t\t\t\t\t\t\t  ByRef sHomePhone As String, _\n\t\t\t\t\t\t\t\t  ByRef sBusArea As String, ByRef sBusPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef sIDDetail2 As String, ByRef sIDDetail3 As String, _\n\t\t\t\t\t\t\t\t  ByRef sPEFP As String, ByRef sPosition As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmplAddr1 As String, ByRef sEmplAddr2 As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmplCity As String, ByRef sEmplPC As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmplRegion As String, ByRef sEmplCountry As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmplArea As String, ByRef sEmplPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef dtEmplSince As Date, ByRef iEmplRowno As Integer, _\n\t\t\t\t\t\t\t\t  ByRef sEmployer2 As String, _\n\t\t\t\t\t\t\t\t  ByRef bEmpl2IsPrev As Boolean, ByRef sEmpl2Position As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmpl2Addr1 As String, ByRef sEmpl2Addr2 As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmpl2City As String, ByRef sEmpl2PC As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmpl2Region As String, ByRef sEmpl2Country As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmpl2Area As String, ByRef sEmpl2Phone As String, _\n\t\t\t\t\t\t\t\t  ByRef dtEmpl2Since As Date, ByRef iEmpl2Rowno As Integer, _\n\t\t\t\t\t\t\t\t  ByRef sMsgs As String) As Boolean\n\n\t\t\t' Some code here\n\t\tEnd Function\n\t\t\n\t\tPublic Overrides Function GetMemberType1(ByVal iCifNo As Integer, _\n\t\t\t\t\t\t\t\t  ByRef iCustNo As Integer, _\n\t\t\t\t\t\t\t\t  ByRef sBranch As String, ByRef sBenefit As String, _\n\t\t\t\t\t\t\t\t  ByRef sTitle As String, ByRef sGender As String, _\n\t\t\t\t\t\t\t\t  ByRef sSurname As String, ByRef sUsual As String, _\n\t\t\t\t\t\t\t\t  ByRef sName As String, ByRef sMiddle As String, _\n\t\t\t\t\t\t\t\t  ByRef dtBirth As Date, ByRef sSin As String, _\n\t\t\t\t\t\t\t\t  ByRef sIDDetail As String, ByRef sMaritalStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmployer As String, ByRef shPB As Short, _\n\t\t\t\t\t\t\t\t  ByRef shDependents As Short, ByRef sReasonOpened As String, _\n\t\t\t\t\t\t\t\t  ByRef dtDateJoined As Date, _\n\t\t\t\t\t\t\t\t  ByRef sCareOf As String, _\n\t\t\t\t\t\t\t\t  ByRef sAddrLine1 As String, ByRef sAddrLine2 As String, _\n\t\t\t\t\t\t\t\t  ByRef sAddrLine3 As String, ByRef sPostal As String, _\n\t\t\t\t\t\t\t\t  ByRef sProv As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmail As String, ByRef sHomeArea As String, _\n\t\t\t\t\t\t\t\t  ByRef sHomePhone As String, _\n\t\t\t\t\t\t\t\t  ByRef sBusArea As String, ByRef sBusPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef dtEmployment As Date, ByRef sPosition As String, _\n\t\t\t\t\t\t\t\t  ByRef sEmplAddress As String, ByRef dtResDate As Date, _\n\t\t\t\t\t\t\t\t  ByRef sResStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sCellArea As String, ByRef sCellPhone As String, _\n\t\t\t\t\t\t\t\t  ByRef dtMemberSince As Date, _\n\t\t\t\t\t\t\t\t  ByRef sJobTitle As String, ByRef sEmplStatus As String, _\n\t\t\t\t\t\t\t\t  ByRef sErrorMessage As String, _\n\t\t\t\t\t\t\t\t  Optional ByRef sIDType As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sAware As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sCountry As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sPhone2Type As String = \"\", _\n\t\t\t\t\t\t\t\t  Optional ByRef sPEFP As String = \"\") As Boolean\n\t\t\tReturn 0\n\t\tEnd Function\n\tEnd Class\n\n\t' The reverse is implemented in Type1\n",
        "created_utc": 1452753872,
        "upvote_ratio": ""
    },
    {
        "title": "\"Yo! What's the smalles resolution we have to account for?\"",
        "author": "farox",
        "url": "https://www.reddit.com/r/programminghorror/comments/40r6pu/yo_whats_the_smalles_resolution_we_have_to/",
        "text": "[removed]",
        "created_utc": 1452674767,
        "upvote_ratio": ""
    },
    {
        "title": "Best way to create an array of strings in java according to the new guy",
        "author": "mlk",
        "url": "https://www.reddit.com/r/programminghorror/comments/40my6p/best_way_to_create_an_array_of_strings_in_java/",
        "text": "    String[] header = (Fields.FIELD_1+\";\"+\n                       Fields.FIELD_2 +\";\"+ \n                       Fields.FIELD_3 + \";\" + \n                       Fields.FIELD_4 + \";\" + \n                       Fields.FIELD_5 + \";\" + \n                       Fields.FIELD_6)\n                      .split(\";\");\n\nThat's all.",
        "created_utc": 1452614103,
        "upvote_ratio": ""
    },
    {
        "title": "We asked a web developer to remove dashes from the URL that gets sent to our API",
        "author": "BelgoCanadian",
        "url": "https://www.reddit.com/r/programminghorror/comments/402ksb/we_asked_a_web_developer_to_remove_dashes_from/",
        "text": "This is what they came back with:\n\n&gt; I spoke to the developers about this.  Changing the scope to strip out the dashes requires a fair amount of extra work and testing on their part.  We suggest instead that we change the help info to be:\n&gt;  \n&gt; When the user clicks the \"Info\", display “Enter the Product License that was in the box with the product you bought,* without the dashes*\n&gt;  \n&gt; Let me know what you think.\n\n\nAwaiting a response from them:\n&gt; This is incredible news to me.\n&gt; What you said is simply not true. It would take 2 seconds to implement\n&gt; http://www.w3schools.com/jsref/jsref_replace.asp\n&gt; \n&gt; serialnumber = serialnumber.replace(“-“, “”)\n\n\nEDIT: To give a little more background:\nThe users will enter a single line of text in a textbox on the site. That text will be put in the URL as a parameter (URL?param=userText). The API returns either 200 or 404 depending on what the *single* parameter in the link is. \nThey still need to write the function that makes the appropriate URL to send to our API for a response. \n\nThey actually told us that if the user enters spaces, then those spaces will be in the URL? WTF, you're gonna send URLs with spaces? \n\n\nTo make this even more ridiculous: I already made our API to remove the dashes but I feel like this is bad form for a developer to suggest that adjusting a string is a lot of work.",
        "created_utc": 1452280701,
        "upvote_ratio": ""
    },
    {
        "title": "I used to think println in java was \"printIn\" as in \"print in\"",
        "author": "cpmoderator12345",
        "url": "https://www.reddit.com/r/programminghorror/comments/3yzgnd/i_used_to_think_println_in_java_was_printin_as_in/",
        "text": "[removed]",
        "created_utc": 1451619955,
        "upvote_ratio": ""
    },
    {
        "title": "No Documentation Whatsoever",
        "author": "Jackeown",
        "url": "https://www.reddit.com/r/programminghorror/comments/3yt0p9/no_documentation_whatsoever/",
        "text": "[removed]",
        "created_utc": 1451496903,
        "upvote_ratio": ""
    },
    {
        "title": "How do roman numerals work? I dunno, just use a lot of if-statements.",
        "author": "RainOnYourTirade",
        "url": "https://www.reddit.com/r/programminghorror/comments/3y4y0j/how_do_roman_numerals_work_i_dunno_just_use_a_lot/",
        "text": "Despite my best efforts trying to convince him otherwise, one of the developers on my project wrote this monstrosity:\n\n    function getPrestigeTitle ($level)\n    {\n    \t$title = \"\";\n    \tif ($level &gt;= 500) {\n    \t\t$title = \"Grandmaster C\";\n    \t}\n    \tif ($level == 0) { $title = \"\"; }\n    \tif ($level == 1) { $title = \"Explorer I\"; }\n    \tif ($level == 2) { $title = \"Explorer II\"; }\n    \tif ($level == 3) { $title = \"Explorer III\"; }\n    \tif ($level == 4) { $title = \"Explorer IV\"; }\n    \tif ($level == 5) { $title = \"Explorer V\"; }\n    \tif ($level == 6) { $title = \"Explorer VI\"; }\n    \tif ($level == 7) { $title = \"Explorer VII\"; }\n    \tif ($level == 8) { $title = \"Explorer VIII\"; }\n    \tif ($level == 9) { $title = \"Explorer IX\"; }\n    \tif ($level == 10) { $title = \"Explorer X\"; }\n    \tif ($level == 11) { $title = \"Explorer XI\"; }\n    \tif ($level == 12) { $title = \"Explorer XII\"; }\n    \tif ($level == 13) { $title = \"Explorer XIII\"; }\n    \tif ($level == 14) { $title = \"Explorer XIV\"; }\n    \tif ($level == 15) { $title = \"Explorer XV\"; }\n    \tif ($level == 16) { $title = \"Explorer XVI\"; }\n    \tif ($level == 17) { $title = \"Explorer XVII\"; }\n    \tif ($level == 18) { $title = \"Explorer XVIII\"; }\n    \tif ($level == 19) { $title = \"Explorer XIX\"; }\n    \tif ($level == 20) { $title = \"Explorer XX\"; }\n    \tif ($level == 21) { $title = \"Explorer XXI\"; }\n    \tif ($level == 22) { $title = \"Explorer XXII\"; }\n    \tif ($level == 23) { $title = \"Explorer XXIII\"; }\n    \tif ($level == 24) { $title = \"Explorer XXIV\"; }\n    \tif ($level == 25) { $title = \"Explorer XXV\"; }\n    \tif ($level == 26) { $title = \"Explorer XXVI\"; }\n    \tif ($level == 27) { $title = \"Explorer XXVII\"; }\n    \tif ($level == 28) { $title = \"Explorer XXVIII\"; }\n    \tif ($level == 29) { $title = \"Explorer XXIX\"; }\n    \tif ($level == 30) { $title = \"Explorer XXX\"; }\n    \tif ($level == 31) { $title = \"Explorer XXXI\"; }\n    \tif ($level == 32) { $title = \"Explorer XXXII\"; }\n    \tif ($level == 33) { $title = \"Explorer XXXIII\"; }\n    \tif ($level == 34) { $title = \"Explorer XXXIV\"; }\n    \tif ($level == 35) { $title = \"Explorer XXXV\"; }\n    \tif ($level == 36) { $title = \"Explorer XXXVI\"; }\n    \tif ($level == 37) { $title = \"Explorer XXXVII\"; }\n    \tif ($level == 38) { $title = \"Explorer XXXVIII\"; }\n    \tif ($level == 39) { $title = \"Explorer XXXIX\"; }\n    \tif ($level == 40) { $title = \"Explorer XL\"; }\n    \tif ($level == 41) { $title = \"Explorer XLI\"; }\n    \tif ($level == 42) { $title = \"Explorer XLII\"; }\n    \tif ($level == 43) { $title = \"Explorer XLIII\"; }\n    \tif ($level == 44) { $title = \"Explorer XLIV\"; }\n    \tif ($level == 45) { $title = \"Explorer XLV\"; }\n    \tif ($level == 46) { $title = \"Explorer XLVI\"; }\n    \tif ($level == 47) { $title = \"Explorer XLVII\"; }\n    \tif ($level == 48) { $title = \"Explorer XLVIII\"; }\n    \tif ($level == 49) { $title = \"Explorer XLIX\"; }\n    \tif ($level == 50) { $title = \"Explorer L\"; }\n    \tif ($level == 51) { $title = \"Explorer LI\"; }\n    \tif ($level == 52) { $title = \"Explorer LII\"; }\n    \tif ($level == 53) { $title = \"Explorer LIII\"; }\n    \tif ($level == 54) { $title = \"Explorer LIV\"; }\n    \tif ($level == 55) { $title = \"Explorer LV\"; }\n    \tif ($level == 56) { $title = \"Explorer LVI\"; }\n    \tif ($level == 57) { $title = \"Explorer LVII\"; }\n    \tif ($level == 58) { $title = \"Explorer LVIII\"; }\n    \tif ($level == 59) { $title = \"Explorer LIX\"; }\n    \tif ($level == 60) { $title = \"Explorer LX\"; }\n    \tif ($level == 61) { $title = \"Explorer LXI\"; }\n    \tif ($level == 62) { $title = \"Explorer LXII\"; }\n    \tif ($level == 63) { $title = \"Explorer LXIII\"; }\n    \tif ($level == 64) { $title = \"Explorer LXIV\"; }\n    \tif ($level == 65) { $title = \"Explorer LXV\"; }\n    \tif ($level == 66) { $title = \"Explorer LXVI\"; }\n    \tif ($level == 67) { $title = \"Explorer LXVII\"; }\n    \tif ($level == 68) { $title = \"Explorer LXVIII\"; }\n    \tif ($level == 69) { $title = \"Explorer LXIX\"; }\n    \tif ($level == 70) { $title = \"Explorer LXX\"; }\n    \tif ($level == 71) { $title = \"Explorer LXXI\"; }\n    \tif ($level == 72) { $title = \"Explorer LXXII\"; }\n    \tif ($level == 73) { $title = \"Explorer LXXIII\"; }\n    \tif ($level == 74) { $title = \"Explorer LXXIV\"; }\n    \tif ($level == 75) { $title = \"Explorer LXXV\"; }\n    \tif ($level == 76) { $title = \"Explorer LXXVI\"; }\n    \tif ($level == 77) { $title = \"Explorer LXXVII\"; }\n    \tif ($level == 78) { $title = \"Explorer LXXVIII\"; }\n    \tif ($level == 79) { $title = \"Explorer LXXIX\"; }\n    \tif ($level == 80) { $title = \"Explorer LXXX\"; }\n    \tif ($level == 81) { $title = \"Explorer LXXXI\"; }\n    \tif ($level == 82) { $title = \"Explorer LXXXII\"; }\n    \tif ($level == 83) { $title = \"Explorer LXXXIII\"; }\n    \tif ($level == 84) { $title = \"Explorer LXXXIV\"; }\n    \tif ($level == 85) { $title = \"Explorer LXXXV\"; }\n    \tif ($level == 86) { $title = \"Explorer LXXXVI\"; }\n    \tif ($level == 87) { $title = \"Explorer LXXXVII\"; }\n    \tif ($level == 88) { $title = \"Explorer LXXXVIII\"; }\n    \tif ($level == 89) { $title = \"Explorer LXXXIX\"; }\n    \tif ($level == 90) { $title = \"Explorer XC\"; }\n    \tif ($level == 91) { $title = \"Explorer XCI\"; }\n    \tif ($level == 92) { $title = \"Explorer XCII\"; }\n    \tif ($level == 93) { $title = \"Explorer XCIII\"; }\n    \tif ($level == 94) { $title = \"Explorer XCIV\"; }\n    \tif ($level == 95) { $title = \"Explorer XCV\"; }\n    \tif ($level == 96) { $title = \"Explorer XCVI\"; }\n    \tif ($level == 97) { $title = \"Explorer XCVII\"; }\n    \tif ($level == 98) { $title = \"Explorer XCVIII\"; }\n    \tif ($level == 99) { $title = \"Explorer XCIX\"; }\n    \tif ($level == 100) { $title = \"Explorer C\"; }\n    \tif ($level == 101) { $title = \"Adventurer I\"; }\n    \tif ($level == 102) { $title = \"Adventurer II\"; }\n    \tif ($level == 103) { $title = \"Adventurer III\"; }\n    \tif ($level == 104) { $title = \"Adventurer IV\"; }\n    \tif ($level == 105) { $title = \"Adventurer V\"; }\n    \tif ($level == 106) { $title = \"Adventurer VI\"; }\n    \tif ($level == 107) { $title = \"Adventurer VII\"; }\n    \tif ($level == 108) { $title = \"Adventurer VIII\"; }\n    \tif ($level == 109) { $title = \"Adventurer IX\"; }\n    \tif ($level == 110) { $title = \"Adventurer X\"; }\n    \tif ($level == 111) { $title = \"Adventurer XI\"; }\n    \tif ($level == 112) { $title = \"Adventurer XII\"; }\n    \tif ($level == 113) { $title = \"Adventurer XIII\"; }\n    \tif ($level == 114) { $title = \"Adventurer XIV\"; }\n    \tif ($level == 115) { $title = \"Adventurer XV\"; }\n    \tif ($level == 116) { $title = \"Adventurer XVI\"; }\n    \tif ($level == 117) { $title = \"Adventurer XVII\"; }\n    \tif ($level == 118) { $title = \"Adventurer XVIII\"; }\n    \tif ($level == 119) { $title = \"Adventurer XIX\"; }\n    \tif ($level == 120) { $title = \"Adventurer XX\"; }\n    \tif ($level == 121) { $title = \"Adventurer XXI\"; }\n    \tif ($level == 122) { $title = \"Adventurer XXII\"; }\n    \tif ($level == 123) { $title = \"Adventurer XXIII\"; }\n    \tif ($level == 124) { $title = \"Adventurer XXIV\"; }\n    \tif ($level == 125) { $title = \"Adventurer XXV\"; }\n    \tif ($level == 126) { $title = \"Adventurer XXVI\"; }\n    \tif ($level == 127) { $title = \"Adventurer XXVII\"; }\n    \tif ($level == 128) { $title = \"Adventurer XXVIII\"; }\n    \tif ($level == 129) { $title = \"Adventurer XXIX\"; }\n    \tif ($level == 130) { $title = \"Adventurer XXX\"; }\n    \tif ($level == 131) { $title = \"Adventurer XXXI\"; }\n    \tif ($level == 132) { $title = \"Adventurer XXXII\"; }\n    \tif ($level == 133) { $title = \"Adventurer XXXIII\"; }\n    \tif ($level == 134) { $title = \"Adventurer XXXIV\"; }\n    \tif ($level == 135) { $title = \"Adventurer XXXV\"; }\n    \tif ($level == 136) { $title = \"Adventurer XXXVI\"; }\n    \tif ($level == 137) { $title = \"Adventurer XXXVII\"; }\n    \tif ($level == 138) { $title = \"Adventurer XXXVIII\"; }\n    \tif ($level == 139) { $title = \"Adventurer XXXIX\"; }\n    \tif ($level == 140) { $title = \"Adventurer XL\"; }\n    \tif ($level == 141) { $title = \"Adventurer XLI\"; }\n    \tif ($level == 142) { $title = \"Adventurer XLII\"; }\n    \tif ($level == 143) { $title = \"Adventurer XLIII\"; }\n    \tif ($level == 144) { $title = \"Adventurer XLIV\"; }\n    \tif ($level == 145) { $title = \"Adventurer XLV\"; }\n    \tif ($level == 146) { $title = \"Adventurer XLVI\"; }\n    \tif ($level == 147) { $title = \"Adventurer XLVII\"; }\n    \tif ($level == 148) { $title = \"Adventurer XLVIII\"; }\n    \tif ($level == 149) { $title = \"Adventurer XLIX\"; }\n    \tif ($level == 150) { $title = \"Adventurer L\"; }\n    \tif ($level == 151) { $title = \"Adventurer LI\"; }\n    \tif ($level == 152) { $title = \"Adventurer LII\"; }\n    \tif ($level == 153) { $title = \"Adventurer LIII\"; }\n    \tif ($level == 154) { $title = \"Adventurer LIV\"; }\n    \tif ($level == 155) { $title = \"Adventurer LV\"; }\n    \tif ($level == 156) { $title = \"Adventurer LVI\"; }\n    \tif ($level == 157) { $title = \"Adventurer LVII\"; }\n    \tif ($level == 158) { $title = \"Adventurer LVIII\"; }\n    \tif ($level == 159) { $title = \"Adventurer LIX\"; }\n    \tif ($level == 160) { $title = \"Adventurer LX\"; }\n    \tif ($level == 161) { $title = \"Adventurer LXI\"; }\n    \tif ($level == 162) { $title = \"Adventurer LXII\"; }\n    \tif ($level == 163) { $title = \"Adventurer LXIII\"; }\n    \tif ($level == 164) { $title = \"Adventurer LXIV\"; }\n    \tif ($level == 165) { $title = \"Adventurer LXV\"; }\n    \tif ($level == 166) { $title = \"Adventurer LXVI\"; }\n    \tif ($level == 167) { $title = \"Adventurer LXVII\"; }\n    \tif ($level == 168) { $title = \"Adventurer LXVIII\"; }\n    \tif ($level == 169) { $title = \"Adventurer LXIX\"; }\n    \tif ($level == 170) { $title = \"Adventurer LXX\"; }\n    \tif ($level == 171) { $title = \"Adventurer LXXI\"; }\n    \tif ($level == 172) { $title = \"Adventurer LXXII\"; }\n    \tif ($level == 173) { $title = \"Adventurer LXXIII\"; }\n    \tif ($level == 174) { $title = \"Adventurer LXXIV\"; }\n    \tif ($level == 175) { $title = \"Adventurer LXXV\"; }\n    \tif ($level == 176) { $title = \"Adventurer LXXVI\"; }\n    \tif ($level == 177) { $title = \"Adventurer LXXVII\"; }\n    \tif ($level == 178) { $title = \"Adventurer LXXVIII\"; }\n    \tif ($level == 179) { $title = \"Adventurer LXXIX\"; }\n    \tif ($level == 180) { $title = \"Adventurer LXXX\"; }\n    \tif ($level == 181) { $title = \"Adventurer LXXXI\"; }\n    \tif ($level == 182) { $title = \"Adventurer LXXXII\"; }\n    \tif ($level == 183) { $title = \"Adventurer LXXXIII\"; }\n    \tif ($level == 184) { $title = \"Adventurer LXXXIV\"; }\n    \tif ($level == 185) { $title = \"Adventurer LXXXV\"; }\n    \tif ($level == 186) { $title = \"Adventurer LXXXVI\"; }\n    \tif ($level == 187) { $title = \"Adventurer LXXXVII\"; }\n    \tif ($level == 188) { $title = \"Adventurer LXXXVIII\"; }\n    \tif ($level == 189) { $title = \"Adventurer LXXXIX\"; }\n    \tif ($level == 190) { $title = \"Adventurer XC\"; }\n    \tif ($level == 191) { $title = \"Adventurer XCI\"; }\n    \tif ($level == 192) { $title = \"Adventurer XCII\"; }\n    \tif ($level == 193) { $title = \"Adventurer XCIII\"; }\n    \tif ($level == 194) { $title = \"Adventurer XCIV\"; }\n    \tif ($level == 195) { $title = \"Adventurer XCV\"; }\n    \tif ($level == 196) { $title = \"Adventurer XCVI\"; }\n    \tif ($level == 197) { $title = \"Adventurer XCVII\"; }\n    \tif ($level == 198) { $title = \"Adventurer XCVIII\"; }\n    \tif ($level == 199) { $title = \"Adventurer XCIX\"; }\n    \tif ($level == 200) { $title = \"Adventurer C\"; }\n    \tif ($level == 201) { $title = \"Veteran I\"; }\n    \tif ($level == 202) { $title = \"Veteran II\"; }\n    \tif ($level == 203) { $title = \"Veteran III\"; }\n    \tif ($level == 204) { $title = \"Veteran IV\"; }\n    \tif ($level == 205) { $title = \"Veteran V\"; }\n    \tif ($level == 206) { $title = \"Veteran VI\"; }\n    \tif ($level == 207) { $title = \"Veteran VII\"; }\n    \tif ($level == 208) { $title = \"Veteran VIII\"; }\n    \tif ($level == 209) { $title = \"Veteran IX\"; }\n    \tif ($level == 210) { $title = \"Veteran X\"; }\n    \tif ($level == 211) { $title = \"Veteran XI\"; }\n    \tif ($level == 212) { $title = \"Veteran XII\"; }\n    \tif ($level == 213) { $title = \"Veteran XIII\"; }\n    \tif ($level == 214) { $title = \"Veteran XIV\"; }\n    \tif ($level == 215) { $title = \"Veteran XV\"; }\n    \tif ($level == 216) { $title = \"Veteran XVI\"; }\n    \tif ($level == 217) { $title = \"Veteran XVII\"; }\n    \tif ($level == 218) { $title = \"Veteran XVIII\"; }\n    \tif ($level == 219) { $title = \"Veteran XIX\"; }\n    \tif ($level == 220) { $title = \"Veteran XX\"; }\n    \tif ($level == 221) { $title = \"Veteran XXI\"; }\n    \tif ($level == 222) { $title = \"Veteran XXII\"; }\n    \tif ($level == 223) { $title = \"Veteran XXIII\"; }\n    \tif ($level == 224) { $title = \"Veteran XXIV\"; }\n    \tif ($level == 225) { $title = \"Veteran XXV\"; }\n    \tif ($level == 226) { $title = \"Veteran XXVI\"; }\n    \tif ($level == 227) { $title = \"Veteran XXVII\"; }\n    \tif ($level == 228) { $title = \"Veteran XXVIII\"; }\n    \tif ($level == 229) { $title = \"Veteran XXIX\"; }\n    \tif ($level == 230) { $title = \"Veteran XXX\"; }\n    \tif ($level == 231) { $title = \"Veteran XXXI\"; }\n    \tif ($level == 232) { $title = \"Veteran XXXII\"; }\n    \tif ($level == 233) { $title = \"Veteran XXXIII\"; }\n    \tif ($level == 234) { $title = \"Veteran XXXIV\"; }\n    \tif ($level == 235) { $title = \"Veteran XXXV\"; }\n    \tif ($level == 236) { $title = \"Veteran XXXVI\"; }\n    \tif ($level == 237) { $title = \"Veteran XXXVII\"; }\n    \tif ($level == 238) { $title = \"Veteran XXXVIII\"; }\n    \tif ($level == 239) { $title = \"Veteran XXXIX\"; }\n    \tif ($level == 240) { $title = \"Veteran XL\"; }\n    \tif ($level == 241) { $title = \"Veteran XLI\"; }\n    \tif ($level == 242) { $title = \"Veteran XLII\"; }\n    \tif ($level == 243) { $title = \"Veteran XLIII\"; }\n    \tif ($level == 244) { $title = \"Veteran XLIV\"; }\n    \tif ($level == 245) { $title = \"Veteran XLV\"; }\n    \tif ($level == 246) { $title = \"Veteran XLVI\"; }\n    \tif ($level == 247) { $title = \"Veteran XLVII\"; }\n    \tif ($level == 248) { $title = \"Veteran XLVIII\"; }\n    \tif ($level == 249) { $title = \"Veteran XLIX\"; }\n    \tif ($level == 250) { $title = \"Veteran L\"; }\n    \tif ($level == 251) { $title = \"Veteran LI\"; }\n    \tif ($level == 252) { $title = \"Veteran LII\"; }\n    \tif ($level == 253) { $title = \"Veteran LIII\"; }\n    \tif ($level == 254) { $title = \"Veteran LIV\"; }\n    \tif ($level == 255) { $title = \"Veteran LV\"; }\n    \tif ($level == 256) { $title = \"Veteran LVI\"; }\n    \tif ($level == 257) { $title = \"Veteran LVII\"; }\n    \tif ($level == 258) { $title = \"Veteran LVIII\"; }\n    \tif ($level == 259) { $title = \"Veteran LIX\"; }\n    \tif ($level == 260) { $title = \"Veteran LX\"; }\n    \tif ($level == 261) { $title = \"Veteran LXI\"; }\n    \tif ($level == 262) { $title = \"Veteran LXII\"; }\n    \tif ($level == 263) { $title = \"Veteran LXIII\"; }\n    \tif ($level == 264) { $title = \"Veteran LXIV\"; }\n    \tif ($level == 265) { $title = \"Veteran LXV\"; }\n    \tif ($level == 266) { $title = \"Veteran LXVI\"; }\n    \tif ($level == 267) { $title = \"Veteran LXVII\"; }\n    \tif ($level == 268) { $title = \"Veteran LXVIII\"; }\n    \tif ($level == 269) { $title = \"Veteran LXIX\"; }\n    \tif ($level == 270) { $title = \"Veteran LXX\"; }\n    \tif ($level == 271) { $title = \"Veteran LXXI\"; }\n    \tif ($level == 272) { $title = \"Veteran LXXII\"; }\n    \tif ($level == 273) { $title = \"Veteran LXXIII\"; }\n    \tif ($level == 274) { $title = \"Veteran LXXIV\"; }\n    \tif ($level == 275) { $title = \"Veteran LXXV\"; }\n    \tif ($level == 276) { $title = \"Veteran LXXVI\"; }\n    \tif ($level == 277) { $title = \"Veteran LXXVII\"; }\n    \tif ($level == 278) { $title = \"Veteran LXXVIII\"; }\n    \tif ($level == 279) { $title = \"Veteran LXXIX\"; }\n    \tif ($level == 280) { $title = \"Veteran LXXX\"; }\n    \tif ($level == 281) { $title = \"Veteran LXXXI\"; }\n    \tif ($level == 282) { $title = \"Veteran LXXXII\"; }\n    \tif ($level == 283) { $title = \"Veteran LXXXIII\"; }\n    \tif ($level == 284) { $title = \"Veteran LXXXIV\"; }\n    \tif ($level == 285) { $title = \"Veteran LXXXV\"; }\n    \tif ($level == 286) { $title = \"Veteran LXXXVI\"; }\n    \tif ($level == 287) { $title = \"Veteran LXXXVII\"; }\n    \tif ($level == 288) { $title = \"Veteran LXXXVIII\"; }\n    \tif ($level == 289) { $title = \"Veteran LXXXIX\"; }\n    \tif ($level == 290) { $title = \"Veteran XC\"; }\n    \tif ($level == 291) { $title = \"Veteran XCI\"; }\n    \tif ($level == 292) { $title = \"Veteran XCII\"; }\n    \tif ($level == 293) { $title = \"Veteran XCIII\"; }\n    \tif ($level == 294) { $title = \"Veteran XCIV\"; }\n    \tif ($level == 295) { $title = \"Veteran XCV\"; }\n    \tif ($level == 296) { $title = \"Veteran XCVI\"; }\n    \tif ($level == 297) { $title = \"Veteran XCVII\"; }\n    \tif ($level == 298) { $title = \"Veteran XCVIII\"; }\n    \tif ($level == 299) { $title = \"Veteran XCIX\"; }\n    \tif ($level == 300) { $title = \"Veteran C\"; }\n    \tif ($level == 301) { $title = \"Master I\"; }\n    \tif ($level == 302) { $title = \"Master II\"; }\n    \tif ($level == 303) { $title = \"Master III\"; }\n    \tif ($level == 304) { $title = \"Master IV\"; }\n    \tif ($level == 305) { $title = \"Master V\"; }\n    \tif ($level == 306) { $title = \"Master VI\"; }\n    \tif ($level == 307) { $title = \"Master VII\"; }\n    \tif ($level == 308) { $title = \"Master VIII\"; }\n    \tif ($level == 309) { $title = \"Master IX\"; }\n    \tif ($level == 310) { $title = \"Master X\"; }\n    \tif ($level == 311) { $title = \"Master XI\"; }\n    \tif ($level == 312) { $title = \"Master XII\"; }\n    \tif ($level == 313) { $title = \"Master XIII\"; }\n    \tif ($level == 314) { $title = \"Master XIV\"; }\n    \tif ($level == 315) { $title = \"Master XV\"; }\n    \tif ($level == 316) { $title = \"Master XVI\"; }\n    \tif ($level == 317) { $title = \"Master XVII\"; }\n    \tif ($level == 318) { $title = \"Master XVIII\"; }\n    \tif ($level == 319) { $title = \"Master XIX\"; }\n    \tif ($level == 320) { $title = \"Master XX\"; }\n    \tif ($level == 321) { $title = \"Master XXI\"; }\n    \tif ($level == 322) { $title = \"Master XXII\"; }\n    \tif ($level == 323) { $title = \"Master XXIII\"; }\n    \tif ($level == 324) { $title = \"Master XXIV\"; }\n    \tif ($level == 325) { $title = \"Master XXV\"; }\n    \tif ($level == 326) { $title = \"Master XXVI\"; }\n    \tif ($level == 327) { $title = \"Master XXVII\"; }\n    \tif ($level == 328) { $title = \"Master XXVIII\"; }\n    \tif ($level == 329) { $title = \"Master XXIX\"; }\n    \tif ($level == 330) { $title = \"Master XXX\"; }\n    \tif ($level == 331) { $title = \"Master XXXI\"; }\n    \tif ($level == 332) { $title = \"Master XXXII\"; }\n    \tif ($level == 333) { $title = \"Master XXXIII\"; }\n    \tif ($level == 334) { $title = \"Master XXXIV\"; }\n    \tif ($level == 335) { $title = \"Master XXXV\"; }\n    \tif ($level == 336) { $title = \"Master XXXVI\"; }\n    \tif ($level == 337) { $title = \"Master XXXVII\"; }\n    \tif ($level == 338) { $title = \"Master XXXVIII\"; }\n    \tif ($level == 339) { $title = \"Master XXXIX\"; }\n    \tif ($level == 340) { $title = \"Master XL\"; }\n    \tif ($level == 341) { $title = \"Master XLI\"; }\n    \tif ($level == 342) { $title = \"Master XLII\"; }\n    \tif ($level == 343) { $title = \"Master XLIII\"; }\n    \tif ($level == 344) { $title = \"Master XLIV\"; }\n    \tif ($level == 345) { $title = \"Master XLV\"; }\n    \tif ($level == 346) { $title = \"Master XLVI\"; }\n    \tif ($level == 347) { $title = \"Master XLVII\"; }\n    \tif ($level == 348) { $title = \"Master XLVIII\"; }\n    \tif ($level == 349) { $title = \"Master XLIX\"; }\n    \tif ($level == 350) { $title = \"Master L\"; }\n    \tif ($level == 351) { $title = \"Master LI\"; }\n    \tif ($level == 352) { $title = \"Master LII\"; }\n    \tif ($level == 353) { $title = \"Master LIII\"; }\n    \tif ($level == 354) { $title = \"Master LIV\"; }\n    \tif ($level == 355) { $title = \"Master LV\"; }\n    \tif ($level == 356) { $title = \"Master LVI\"; }\n    \tif ($level == 357) { $title = \"Master LVII\"; }\n    \tif ($level == 358) { $title = \"Master LVIII\"; }\n    \tif ($level == 359) { $title = \"Master LIX\"; }\n    \tif ($level == 360) { $title = \"Master LX\"; }\n    \tif ($level == 361) { $title = \"Master LXI\"; }\n    \tif ($level == 362) { $title = \"Master LXII\"; }\n    \tif ($level == 363) { $title = \"Master LXIII\"; }\n    \tif ($level == 364) { $title = \"Master LXIV\"; }\n    \tif ($level == 365) { $title = \"Master LXV\"; }\n    \tif ($level == 366) { $title = \"Master LXVI\"; }\n    \tif ($level == 367) { $title = \"Master LXVII\"; }\n    \tif ($level == 368) { $title = \"Master LXVIII\"; }\n    \tif ($level == 369) { $title = \"Master LXIX\"; }\n    \tif ($level == 370) { $title = \"Master LXX\"; }\n    \tif ($level == 371) { $title = \"Master LXXI\"; }\n    \tif ($level == 372) { $title = \"Master LXXII\"; }\n    \tif ($level == 373) { $title = \"Master LXXIII\"; }\n    \tif ($level == 374) { $title = \"Master LXXIV\"; }\n    \tif ($level == 375) { $title = \"Master LXXV\"; }\n    \tif ($level == 376) { $title = \"Master LXXVI\"; }\n    \tif ($level == 377) { $title = \"Master LXXVII\"; }\n    \tif ($level == 378) { $title = \"Master LXXVIII\"; }\n    \tif ($level == 379) { $title = \"Master LXXIX\"; }\n    \tif ($level == 380) { $title = \"Master LXXX\"; }\n    \tif ($level == 381) { $title = \"Master LXXXI\"; }\n    \tif ($level == 382) { $title = \"Master LXXXII\"; }\n    \tif ($level == 383) { $title = \"Master LXXXIII\"; }\n    \tif ($level == 384) { $title = \"Master LXXXIV\"; }\n    \tif ($level == 385) { $title = \"Master LXXXV\"; }\n    \tif ($level == 386) { $title = \"Master LXXXVI\"; }\n    \tif ($level == 387) { $title = \"Master LXXXVII\"; }\n    \tif ($level == 388) { $title = \"Master LXXXVIII\"; }\n    \tif ($level == 389) { $title = \"Master LXXXIX\"; }\n    \tif ($level == 390) { $title = \"Master XC\"; }\n    \tif ($level == 391) { $title = \"Master XCI\"; }\n    \tif ($level == 392) { $title = \"Master XCII\"; }\n    \tif ($level == 393) { $title = \"Master XCIII\"; }\n    \tif ($level == 394) { $title = \"Master XCIV\"; }\n    \tif ($level == 395) { $title = \"Master XCV\"; }\n    \tif ($level == 396) { $title = \"Master XCVI\"; }\n    \tif ($level == 397) { $title = \"Master XCVII\"; }\n    \tif ($level == 398) { $title = \"Master XCVIII\"; }\n    \tif ($level == 399) { $title = \"Master XCIX\"; }\n    \tif ($level == 400) { $title = \"Master C\"; }\n    \tif ($level == 401) { $title = \"Grandmaster I\"; }\n    \tif ($level == 402) { $title = \"Grandmaster II\"; }\n    \tif ($level == 403) { $title = \"Grandmaster III\"; }\n    \tif ($level == 404) { $title = \"Grandmaster IV\"; }\n    \tif ($level == 405) { $title = \"Grandmaster V\"; }\n    \tif ($level == 406) { $title = \"Grandmaster VI\"; }\n    \tif ($level == 407) { $title = \"Grandmaster VII\"; }\n    \tif ($level == 408) { $title = \"Grandmaster VIII\"; }\n    \tif ($level == 409) { $title = \"Grandmaster IX\"; }\n    \tif ($level == 410) { $title = \"Grandmaster X\"; }\n    \tif ($level == 411) { $title = \"Grandmaster XI\"; }\n    \tif ($level == 412) { $title = \"Grandmaster XII\"; }\n    \tif ($level == 413) { $title = \"Grandmaster XIII\"; }\n    \tif ($level == 414) { $title = \"Grandmaster XIV\"; }\n    \tif ($level == 415) { $title = \"Grandmaster XV\"; }\n    \tif ($level == 416) { $title = \"Grandmaster XVI\"; }\n    \tif ($level == 417) { $title = \"Grandmaster XVII\"; }\n    \tif ($level == 418) { $title = \"Grandmaster XVIII\"; }\n    \tif ($level == 419) { $title = \"Grandmaster XIX\"; }\n    \tif ($level == 420) { $title = \"Grandmaster XX\"; }\n    \tif ($level == 421) { $title = \"Grandmaster XXI\"; }\n    \tif ($level == 422) { $title = \"Grandmaster XXII\"; }\n    \tif ($level == 423) { $title = \"Grandmaster XXIII\"; }\n    \tif ($level == 424) { $title = \"Grandmaster XXIV\"; }\n    \tif ($level == 425) { $title = \"Grandmaster XXV\"; }\n    \tif ($level == 426) { $title = \"Grandmaster XXVI\"; }\n    \tif ($level == 427) { $title = \"Grandmaster XXVII\"; }\n    \tif ($level == 428) { $title = \"Grandmaster XXVIII\"; }\n    \tif ($level == 429) { $title = \"Grandmaster XXIX\"; }\n    \tif ($level == 430) { $title = \"Grandmaster XXX\"; }\n    \tif ($level == 431) { $title = \"Grandmaster XXXI\"; }\n    \tif ($level == 432) { $title = \"Grandmaster XXXII\"; }\n    \tif ($level == 433) { $title = \"Grandmaster XXXIII\"; }\n    \tif ($level == 434) { $title = \"Grandmaster XXXIV\"; }\n    \tif ($level == 435) { $title = \"Grandmaster XXXV\"; }\n    \tif ($level == 436) { $title = \"Grandmaster XXXVI\"; }\n    \tif ($level == 437) { $title = \"Grandmaster XXXVII\"; }\n    \tif ($level == 438) { $title = \"Grandmaster XXXVIII\"; }\n    \tif ($level == 439) { $title = \"Grandmaster XXXIX\"; }\n    \tif ($level == 440) { $title = \"Grandmaster XL\"; }\n    \tif ($level == 441) { $title = \"Grandmaster XLI\"; }\n    \tif ($level == 442) { $title = \"Grandmaster XLII\"; }\n    \tif ($level == 443) { $title = \"Grandmaster XLIII\"; }\n    \tif ($level == 444) { $title = \"Grandmaster XLIV\"; }\n    \tif ($level == 445) { $title = \"Grandmaster XLV\"; }\n    \tif ($level == 446) { $title = \"Grandmaster XLVI\"; }\n    \tif ($level == 447) { $title = \"Grandmaster XLVII\"; }\n    \tif ($level == 448) { $title = \"Grandmaster XLVIII\"; }\n    \tif ($level == 449) { $title = \"Grandmaster XLIX\"; }\n    \tif ($level == 450) { $title = \"Grandmaster L\"; }\n    \tif ($level == 451) { $title = \"Grandmaster LI\"; }\n    \tif ($level == 452) { $title = \"Grandmaster LII\"; }\n    \tif ($level == 453) { $title = \"Grandmaster LIII\"; }\n    \tif ($level == 454) { $title = \"Grandmaster LIV\"; }\n    \tif ($level == 455) { $title = \"Grandmaster LV\"; }\n    \tif ($level == 456) { $title = \"Grandmaster LVI\"; }\n    \tif ($level == 457) { $title = \"Grandmaster LVII\"; }\n    \tif ($level == 458) { $title = \"Grandmaster LVIII\"; }\n    \tif ($level == 459) { $title = \"Grandmaster LIX\"; }\n    \tif ($level == 460) { $title = \"Grandmaster LX\"; }\n    \tif ($level == 461) { $title = \"Grandmaster LXI\"; }\n    \tif ($level == 462) { $title = \"Grandmaster LXII\"; }\n    \tif ($level == 463) { $title = \"Grandmaster LXIII\"; }\n    \tif ($level == 464) { $title = \"Grandmaster LXIV\"; }\n    \tif ($level == 465) { $title = \"Grandmaster LXV\"; }\n    \tif ($level == 466) { $title = \"Grandmaster LXVI\"; }\n    \tif ($level == 467) { $title = \"Grandmaster LXVII\"; }\n    \tif ($level == 468) { $title = \"Grandmaster LXVIII\"; }\n    \tif ($level == 469) { $title = \"Grandmaster LXIX\"; }\n    \tif ($level == 470) { $title = \"Grandmaster LXX\"; }\n    \tif ($level == 471) { $title = \"Grandmaster LXXI\"; }\n    \tif ($level == 472) { $title = \"Grandmaster LXXII\"; }\n    \tif ($level == 473) { $title = \"Grandmaster LXXIII\"; }\n    \tif ($level == 474) { $title = \"Grandmaster LXXIV\"; }\n    \tif ($level == 475) { $title = \"Grandmaster LXXV\"; }\n    \tif ($level == 476) { $title = \"Grandmaster LXXVI\"; }\n    \tif ($level == 477) { $title = \"Grandmaster LXXVII\"; }\n    \tif ($level == 478) { $title = \"Grandmaster LXXVIII\"; }\n    \tif ($level == 479) { $title = \"Grandmaster LXXIX\"; }\n    \tif ($level == 480) { $title = \"Grandmaster LXXX\"; }\n    \tif ($level == 481) { $title = \"Grandmaster LXXXI\"; }\n    \tif ($level == 482) { $title = \"Grandmaster LXXXII\"; }\n    \tif ($level == 483) { $title = \"Grandmaster LXXXIII\"; }\n    \tif ($level == 484) { $title = \"Grandmaster LXXXIV\"; }\n    \tif ($level == 485) { $title = \"Grandmaster LXXXV\"; }\n    \tif ($level == 486) { $title = \"Grandmaster LXXXVI\"; }\n    \tif ($level == 487) { $title = \"Grandmaster LXXXVII\"; }\n    \tif ($level == 488) { $title = \"Grandmaster LXXXVIII\"; }\n    \tif ($level == 489) { $title = \"Grandmaster LXXXIX\"; }\n    \tif ($level == 490) { $title = \"Grandmaster XC\"; }\n    \tif ($level == 491) { $title = \"Grandmaster XCI\"; }\n    \tif ($level == 492) { $title = \"Grandmaster XCII\"; }\n    \tif ($level == 493) { $title = \"Grandmaster XCIII\"; }\n    \tif ($level == 494) { $title = \"Grandmaster XCIV\"; }\n    \tif ($level == 495) { $title = \"Grandmaster XCV\"; }\n    \tif ($level == 496) { $title = \"Grandmaster XCVI\"; }\n    \tif ($level == 497) { $title = \"Grandmaster XCVII\"; }\n    \tif ($level == 498) { $title = \"Grandmaster XCVIII\"; }\n    \tif ($level == 499) { $title = \"Grandmaster XCIX\"; }\n    \tif ($level == 500) { $title = \"Grandmaster C\"; }\n    \treturn $title;\n    }",
        "created_utc": 1451005206,
        "upvote_ratio": ""
    },
    {
        "title": "\"Yeah, Linux sometimes removes files from Windows profiles.\"",
        "author": "Jugl",
        "url": "https://www.reddit.com/r/programminghorror/comments/3xuuua/yeah_linux_sometimes_removes_files_from_windows/",
        "text": "Let me introduce myself at first. I'm Jugl, I'm 17 years old, I'm from Germany and I'm in my final year at school. My interest for coding piqued at the age of 12 and since then I've been trying myself out in a multitude of programming languages. Every year, ten teams of three students each participate in a \"renowned\" programming competition. Why the quotes? I'll tell you. Short story: They managed to destroy their reputation in only thirty minutes. Long story:\n\nThis autumn was the second time I participated in this competition. I was joined by two friends who were on the same level regarding programming knowledge and a teacher who thoroughly helped us with getting the hang of the theoretical bits *(heh)* and pieces. All of the teams come together at a school to then be tortured by a task which is not supposed to be entirely solved within the course of three hours. The first time we participated, we brought our own equipment much to the dislike of the hosts since they believed that their system was reliable. The second time, we decided to just go along with it and put our faith into what they had to offer. We were yet to experience just how wrong this decision was.\n\nAfter we (my group) received our login credentials for our temporary profiles, we went straight to distributing the functions of each member. There's \"The Brain\" who is supposed to understand and get a theoretical understanding of what the task is about, \"The Converter\" whose task is to apply programming schemantics to what The Brain tells him and, finally, me, \"The Coder\" who just sits there and implements the solution. I got to work rather quickly and searched for an IDE I was familiar with. They ran Linux on their workplace PCs which was definitely a reasonable option for developers. I opted for Eclipse since I knew the ins and outs of Java. Part of a part of a part of our task was to read an image. \"That's easy,\" I thought to myself and entered the first line of code ... and that's when I noticed something was incredibly wrong.\n\n    ImageIO.read(\"res/input.png\");\n    ^\n    java.lang.ClassNotFoundException: javax.imageio.ImageIO\n        at jugl.comp15.Solution.main(Solution.java:6)\n\n(/u/FeppingCreature pointed the package name out: `comp15` is just a placeholder)\n\nI checked my imports, removed and added the line and recompiled it, checked the build path over and over again only to come to the conclusion that they were running Java 1.3. Yes, you heard me right. Java 1.3. ImageIO was first implemented in Java 1.4 but they were running f****** Java 1.3. Wasn't this released in 2001? So I searched some more, found an ancient distribution of NetBeans which was no good at all. I searched some more and found Delphi. I knew I was not opting for Pascal because I didn't want to lose my sanity. I already wanted to use HTML and Javascript to implement the solution, but they had Firefox 1.5 installed which didn't support crucial standards.\n\nIt took little time for one of the hosts to notice that something was clearly wrong with our team. He told me that there's the possibility to connect to the in-house Windows server. He even promised that they'd update the server more frequently than the Linux clients. And he was right. Now I was able to work with Java 1.5. Now I was  cooking with gas. I used the remaining two hours to do the best I could and, five minutes before time was over, I finished the last line of code. Final tests successful, project saved on user profile and computer turned off ... basically we had nothing to worry about. Yet.\n\nA break of thirty minutes followed before each team had to demonstrate and present their solutions. We sat there with striking self-confidence, waiting for our turn. After six presentations ranging from perfect to disastrous (all of them implemented their solutions in Pascal for some reason), we stood up and logged into my Windows profile. My heart stopped when I searched for the directory I saved my project to. It was gone. Everything was gone. Code, resources, presentation, everything. A certain tumoil emerged after three minutes of silence. The jury stared at us and we were on the search for words. \"The files are gone,\" I said with a blank expression on my face. \"Are you s-,\" I heard someone ask before I interrupted. \"YES, THE FILES ARE GONE.\"\n\nWith the assistance of a host and a 16-year-old Linux crack (I'm calling him Linus), we went back to our workplace while they continued with the next presentation in line. I logged in and, again, nothing to be found. Linus swapped places with me and, after turning the computer off and and on again, he began typing into the Linux console for ten minutes straight.\n\n\"Yeah, Linux sometimes removes files from Windows profiles,\" he spoke after the unbearable silence. Wait, what? This happens? At a competition all about programming? It's one thing to not be up-to-date when it comes to SDKs, but this? Linus turned around and stared into my blank eyes trying to explain it as good as he could. \"You know, when there's a conflict between the file structure of Windows and Linux, Linux usually wins the fight because in our system Linux is configured to have higher-level permissions than Windows. If you're logging out of your Windows profile, Windows tries to save the project to your shared profile but Linux *might* be there to stop Windows from doing that.\" \n\n\"So what you're trying to say to me is that Linux can randomly wipe files from my Windows profile?\" I asked in disbelief of what I just heard. \"Exactly,\" Linus responded. While The Brain and The Converter couldn't really believe it either, I felt like I just wasted my knowledge on something which was supposed to fail at some point. My code was my baby and I had it brutally taken away from me.\n\nSoon enough, the school director, also part of the jury, joined the party. \"We're done with the presentations. Why's it taking so long?\" he asked. In my mind, I made him responsible for the loss of my child and I asked him why he'd allow a programming competition in a school with technical equipment from the last decade. I even gave him two options to pick from: call the results invalid or repeat the competition on another date in the future. \"We'll think of something,\" he said before he turned his back to me.\n\nThey didn't. We presented our solution with no code to prove it and we reached the 9th place out of ten. A bit of justice has been served since the in-house team got the last place and, to be honest, their solution didn't even have something to do with the task at hand. This was also the first time I've seen only Pascal-based solutions ahead of us in the final ranking. We had a few talks with other teams and all of them were of the opinion that our solution was, theoretically, the best, but in the end, the jury made the decisions. Furthermore, most teams won't be participating in the upcoming years because of this incident. We achieved something at least. The hosts announced that they will *probably* only allow custom equipment from now on. Sadly, I will have already finished my finals by the next time the contest comes around to greet teams with open arms again. Well, they could also consider updating their system but who has time and money for that?",
        "created_utc": 1450805676,
        "upvote_ratio": ""
    },
    {
        "title": "Como puedo entender de mejor manera la programación",
        "author": "blackwatchz",
        "url": "https://www.reddit.com/r/programminghorror/comments/3xhk5x/como_puedo_entender_de_mejor_manera_la/",
        "text": "[removed]",
        "created_utc": 1450548496,
        "upvote_ratio": ""
    },
    {
        "title": "Integrating with a shitty API. This is why HTTP codes matter people!",
        "author": "DrinkingAndFighting",
        "url": "https://www.reddit.com/r/programminghorror/comments/3xc508/integrating_with_a_shitty_api_this_is_why_http/",
        "text": "So I was integrating a web service with another API and it was a classic clusterfuck of PHP, leaking SQL and bad practices. The only status codes the API ever returned were 500 (the server crashed) or 200 (the server didn't crash).\n\n        res = requests.post(\n                self.something_provider_definition['url'], \n                data={'xml': xml_contents}, \n                params={\n                    'mode': 'import', \n                    'hash': self.something_provider_definition['hash']\n                }\n        )\n        if res.status_code != 500:\n            text = res.text\n            # For some bizarre reason the response may contain a\n            # PHP var_dump\n            strip_php_var_dump = re.compile('&lt;(.*)&gt;', re.DOTALL)\n            text = re.sub(strip_php_var_dump, '', text)\n            # regex to verify response\n            correct_res = re.compile('(A new account - [0-9]+ has been created in area [0-9]+)')\n            if correct_res.match(text):\n                return 201, text\n\nSo I resorted to this monstrosity.",
        "created_utc": 1450440712,
        "upvote_ratio": ""
    },
    {
        "title": "Magic Directives",
        "author": "qstnblethics",
        "url": "https://www.reddit.com/r/programminghorror/comments/3x7r6s/magic_directives/",
        "text": "First, let's take a line with a few directives on it:\n\n    &lt;a href=\"\" lightbox-control=\"\" lightbox-iframe=\"\" iframe-src=\"//xxx.domain.com/some-path/\" iframe-name=\"1424883679512\"&gt;location finder&lt;/a&gt;\n\nSo got a couple of directives there, let's take a look!\n\n     27          .directive('lightboxControl', function() {\n     28             return function($scope, $element) {\n     29                 $element.on('click', function() {\n     30                     var $container = globalObject.angEl('.light-box-container');\n     31                     var $outer = globalObject.angEl('.light-box-outer');\n     32 &gt;   &gt;   &gt;   &gt;   &gt;   var $lightbox = globalObject.angEl('.light-box');\n     33 &gt;   &gt;   &gt;   &gt;   &gt;   var $lightboxContent = globalObject.angEl('.light-box-content');\n     34\n     35                     $outer.addClass('light-box-open');\n     36\n     37                     'click touchstart'.split(' ').forEach(function(eventName) {\n     38                         $container.on(eventName, function() {\n     39 &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   $lightboxContent.html('');\n     40 &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   $lightbox.removeClass('elements');\n     41                             $outer.removeClass('light-box-open');\n     42                         });\n     43                     });\n     44\n     45 &gt;   &gt;   &gt;   &gt;   &gt;   'click touchstart'.split(' ').forEach(function(eventName) {\n     46 &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   $lightboxContent.on(eventName, function(e) {\n     47 &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   e.stopPropagation();\n     48 &gt;   &gt;   &gt;   &gt;   &gt;   &gt;   });\n     49 &gt;   &gt;   &gt;   &gt;   &gt;   });\n     50                 });\n     51             }\n     52         })\n\n     124     angular.module('lightboxIframeLb', [])\n     125\n     126         .directive('lightboxIframe', function() {\n     127             return {\n     128                 replace: false,\n     129                 scope: {\n     130                     iframeSrc: '@',\n     131                     iframeName: '@'\n     132                 },\n     133                 link: function($scope, $element) {\n     134                     $element.on('click', function() {\n     135                         var template = '&lt;iframe src=\"' + $scope.iframeSrc + '\" name=\"' + $scope.iframeName + '\" style=\"height:600px;width:100%\"&gt;&lt;/iframe&gt;';\n     136                         globalObject.angEl('.light-box-content').append(template);\n     137                     });\n     138                 }\n     139             };\n     140         });\n\nOk, so we've got some templating things there, some lovely string interpolation, jquery style code using some proprietry global bullshit, and no $templateCache usage, whatever, but why is this not working!\n\n    &lt;lightbox-html&gt;&lt;/lightbox-html&gt;\n\n\n\n     18         .directive('lightboxHtml', function() {\n     19             return {\n     20                 replace: true,\n     21                 template: '&lt;div class=\"light-box-outer\"&gt;&lt;div class=\"light-box-container\"&gt;&lt;div class=\"light-box\"&gt;&lt;i class=\"glyphicon glyphicon-remove lightbox-close\"&gt;&lt;/i&gt;&lt;div class=\"light-box-content\"&gt;\n    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'\n     22             }\n     23         })\n\nok it works now!\n\nuuhhhhh\n\n\nedit: for anyone wondering, the greater-thans are tabs, the same guy wrote this file in one go, yet still managed to mix tabs and spaces!",
        "created_utc": 1450361069,
        "upvote_ratio": ""
    },
    {
        "title": "C++ likes to take a shit",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3x2iep/c_likes_to_take_a_shit/",
        "text": "[deleted]",
        "created_utc": 1450266502,
        "upvote_ratio": ""
    },
    {
        "title": "Can you fix my code without looking at it?",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3wn7i4/can_you_fix_my_code_without_looking_at_it/",
        "text": "[deleted]",
        "created_utc": 1450012056,
        "upvote_ratio": ""
    },
    {
        "title": "Those pesky asterisks",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3wkooq/those_pesky_asterisks/",
        "text": "[deleted]",
        "created_utc": 1449961087,
        "upvote_ratio": ""
    },
    {
        "title": "sizeof(facepalm)",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3wf1s8/sizeoffacepalm/",
        "text": "So I decided to compile the kernel for my Android phone the other day. Downloaded the source tarball from the phone manufacturer's site, downloaded a cross compiler toolchain, and... it didn't build.\n\nIt turned out that what \"broke\" the build was the fact that I used gcc 4.8, which introduced the super handy `-Wsizeof-pointer-memaccess` warning option (and warnings are treated as errors when building the kernel). It caught a dozen or so improper uses of the `sizeof` operator, such as this one:\n\n    static ssize_t frobnitz_sysfs_delay_show(\n            struct frobnitz_data *akm, char *buf, int pos)\n    {\n            int64_t val;\n\n            mutex_lock(&amp;akm-&gt;val_mutex);\n            val = akm-&gt;delay[pos];\n            mutex_unlock(&amp;akm-&gt;val_mutex);\n\n            return snprintf(buf,sizeof(buf), \"%lld\\n\", val);\n    }\n\nAt least that one looks relatively harmless (that is, as long as val never exceeds 999), but some of the others looked more serious.",
        "created_utc": 1449862932,
        "upvote_ratio": ""
    },
    {
        "title": "Give me floating-point arithmetic, or give me death!",
        "author": "OmegaNaughtEquals1",
        "url": "https://www.reddit.com/r/programminghorror/comments/3w1y59/give_me_floatingpoint_arithmetic_or_give_me_death/",
        "text": "I'm reading a recent (2014) book on high performance computing. One of the examples discusses implementing a simple direct [N-body](https://en.wikipedia.org/wiki/N-body_simulation) solver using an Intel Xeon Phi coprocessor. Most of the code is typical stuff for the N-body problem with a few sprinkles of interesting syntax for offloading OpenMP work on the device. Then... then there was this.\n\n    int chunkSize = (int)ceil((double)(n)/THREADS_PER_OFFLOAD);\n\nIn case you were curious, `n` and the macro are both positive `int`s.\n\nP.S. That `ceil` is [`std::ceil`](http://en.cppreference.com/w/cpp/numeric/math/ceil) for extra C-style cast deliciousness.",
        "created_utc": 1449652516,
        "upvote_ratio": ""
    },
    {
        "title": "When code speaks for itself...",
        "author": "dbj1303",
        "url": "https://www.reddit.com/r/programminghorror/comments/3vw0rl/when_code_speaks_for_itself/",
        "text": "I'm in a group of six people, doing a coding assignment for our university project, in the key of C. As we are a group, we are all expected to read through all code produced. As I read through some code this morning, I stumble upon this gem:  \n\n    int i;\n    int g;\n    for (i = 0; i &lt; 20; i++) {\n      some_struct.array[g] = some_var;\n      g++\n    };\n\nThe number 20 is some magic number, which corresponds to a value ALREADY DEFINED AS A SYMBOLIC CONSTANT. Why one chose to disregard this definition, I do not know. But the worst part is the variables 'i' and 'g'. First off, g is uninitialised and later used as an index of an array, where the variable 'i' is a completely valid replacement index variable. The weird semicolon placement at the end of the control structure... why?! Maybe it compiles, but I will not know before I have fixed the 122 other errors produced by these 200 lines of code.  \n\nI have just started programming with other people. Something I have never done before. If this is what it's like to work in the industry, then God help me. I am so young, thus I will pray this may not get any worse.",
        "created_utc": 1449549669,
        "upvote_ratio": ""
    },
    {
        "title": "Getting new intranet apps is always an adventure",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3vh9zi/getting_new_intranet_apps_is_always_an_adventure/",
        "text": "[deleted]",
        "created_utc": 1449272260,
        "upvote_ratio": ""
    },
    {
        "title": "Was writing greasemonkey scripts for an in-house app and found a sms gateway",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3vgna3/was_writing_greasemonkey_scripts_for_an_inhouse/",
        "text": "[deleted]",
        "created_utc": 1449262600,
        "upvote_ratio": ""
    },
    {
        "title": "Precious gem from our CTO",
        "author": "kortemy",
        "url": "https://www.reddit.com/r/programminghorror/comments/3uzfig/precious_gem_from_our_cto/",
        "text": "First of all, I am posting this with his consent. :D We just laughed our asses off when I found this.\n\n\n    function someFunction(confirmed) {\n        // do something\n        var confirmationUndefined = typeof confirmed === 'undefined';\n        confirmed = (confirmed) ? confirmed : false;\n        // do something\n        if (confirmationUndefined) {\n            showConfirmDialog();\n            return;\n        } else if (!confirmed) {\n            // do something\n            return;\n        }\n    }\n\n\nAt first I was like \"Is this some dark JavaScript magic I cannot comprehend, or is it just bullshit\"? It is what it is. Code itself is pretty old, and he admitted he was still learning JS at the time. He is pretty good now. :)",
        "created_utc": 1448966726,
        "upvote_ratio": ""
    },
    {
        "title": "Learning to make an information system in VB.NET, one of my first \"big\" projects.",
        "author": "SalvaXr",
        "url": "https://www.reddit.com/r/programminghorror/comments/3uvh8a/learning_to_make_an_information_system_in_vbnet/",
        "text": "So we needed to validate that the fields were correct, and filled, to insert update delete etc.\n\n[This](http://pastebin.com/Zf26EAWz) is what I came up with, they didn't check our code so we got a 10 anyway, and I learned never to do that again, I still cringe looking at it.",
        "created_utc": 1448903646,
        "upvote_ratio": ""
    },
    {
        "title": "Let's build a URI in javascript!",
        "author": "qstnblethics",
        "url": "https://www.reddit.com/r/programminghorror/comments/3u6yim/lets_build_a_uri_in_javascript/",
        "text": "    var regex = new RegExp(\"\\/product\\/|\\/item\\/|\\/service\\/\");\n    \n    var referrer = regex.exec(location.href),\n        referrerSource = referrer ? 'referrerSource=booking' : '',\n        $emailInput = $element.parent().find('input').val(),\n        referrerEmail =  (typeof $emailInput !== 'undefined' &amp;&amp; $emailInput !== '') ? '?referrerEmail=' : '',\n        emailAddress = typeof $emailInput !== 'undefined' ? $emailInput : '',\n        pagelink = '/newsletter' + referrerEmail + emailAddress,\n        appendBookingRefferer = newsletterPageLink + (referrerSource !== '' ? ('&amp;' + referrerSource) : '');\n    \n    location.href = !!~pagelink.indexOf('?') ? appendBookingRefferer : (newsletterPageLink + '?' + referrerSource);",
        "created_utc": 1448439985,
        "upvote_ratio": ""
    },
    {
        "title": "Code from designer",
        "author": "unauthorizedintruder",
        "url": "https://www.reddit.com/r/programminghorror/comments/3tyr4f/code_from_designer/",
        "text": "Back when I was a CS student with half year away from graduation, there was a professor looking for part time Flash programmer. I took it. I was told to convert the code from ActionScript 2 to ActionScript 3, and possibly export it for Android. The program was a small choice-choosing quiz. Nothing biggie. How bad could it be? \n\nI received the source code. It's Flash CS 5.5 file. Oh. Yeah...\n\nBack then ActionScript 2 was already dead, and Flash ActionScript 3 was somewhat dominating, but slowly losing to Unity.\n\nI coded in Flash 8 a year before this, so it didn't feel out of ordinary. I opened it. Of course, the code was everywhere throughout the timeline. I converted syntax to ActionScript 3, expecting like 50-60 syntax errors and some warnings. \n\nI should note that at the time, I was also developing a 3D game in C++ using only DirectX 9. Everything was neatly classed and nearly zero duplicate code. There's also one God Object class because I was innocent enough to try wrapping entire DX9. And since a CS grad student can do that much, I expected nothing less from this.\n\nI compiled the code, joking with myself \"hope this won't reach 300 errors or it'll be a long while\". And the result arrived:\n\n    8900 errors 60 warnings\n\nI remembered I dropped my jaw, collected it, went to the bathroom and thought \"so this is what working feels like\".\n\nI got back, opened a timeline script, and I found: \n\n    booleanValue01 = false;\n    booleanValue02 = false;\n    booleanValue03 = false;\n    booleanValue04 = false;\n    ...\n    booleanValue98 = false;\n    booleanValue99 = false;\n    booleanValue100 = false;\n\n    if(anotherBooleanValue01 == true)\n    {\n         booleanValue01 = true;\n    }\n    if(anotherBooleanValue02 == true)\n    {\n         booleanValue02 = true;\n    }\n    ...\n    if(anotherBooleanValue100 == true)\n    {\n        booleanValue100 = true;\n    }\n     \n    //the rest of the script that play sounds\n\nI can't remember how many were there exactly, but there were walls of them. And it was like this 80% of the rest of the script.\n\nI called my boss, asking if there's any rules about using arrays and loops. Turned out whoever wrote this was just a designer. He only knew enough to get the program going. He wrote some basic template and let his secretary did the copy/paste. And I'm free to use for loops however I want.\n\nSo I slowly declared arrays, and put those walls of booleans into loops, while fixing AS2 to AS3 migration issue here and there. A month later, I almost got the program to work like it used to. Then I got the new boss, and he decided that we should rewrite the whole program in FlashBuilder instead.\n\nI showed a part of the code to my friend who wasn't sure that his coding skill was up there. He gained confident right away.",
        "created_utc": 1448300182,
        "upvote_ratio": ""
    },
    {
        "title": "About MVC",
        "author": "hellomaya",
        "url": "https://www.reddit.com/r/programminghorror/comments/3ty840/about_mvc/",
        "text": "\n## Problem\n\n\nWhen I knew this MVC idea and found its useful to build better modular app, I feel its cool and useful, and then..\n\nAfter I have tried more and more, the awkward moment coming up frequently, sometimes I just get used to write code more like a machine, it works like, \"OK, now we have MVC, and then lets build Model first, and then Controller, and then View, then go back to the Modal to build more logic to support data flow\"..\n\nThe problem happened in the use of Model, as we know, I heard people say that try FAT model and THIN controller, and I totally not agree with that, when we put a lot logic in model, we just get a heavy class to maintain, painful!!\n\nThen people recommended to try Repository pattern, which is actually a smarter way, but not enough, the logic to fetch/update data to model, it usually happened, but not for one modal at a time, but many at a time, especially for those SQL based model, then the logic is based on utilizing the models to access data, but not really \"FROM IT\".\n\nAlso, controller, so far all frameworks I have know, to build controller in this way, \"command controller XxxController\" etc, I just feel it's painful too. In one controller class, we had \"showAll, showOne, update, create, delete, ....\", more and more methods in one controller, and when we want to deal with \"update\", we open the editor, and then search it by scrolling down, usually that doesn't work, because there are more than thousands of line of code..\n\nI think controller should have two behaviors for now, one is fetch, another is update, or whatever, to put all functions in one controller isn't good idea, for example, UserController, or /User/FetchController, /User/UpdateController..\n\nTo think about THIN controller, then we will have to build another layer of class to handle data input/output, so this time, I would like to call it \"Pipe\"..\n\nTo think about the Model as data source or water source in pipeline system, and then pipe is used to stream water out of the source then to anywhere we want to..\n\n## View \n\nWe get used to like that View is seperated from data/code, is a really cool idea, but is it really once for all?\n\nWhen you are build a web app, which had 50+ of Views, what you will think of it? View is painful, it's not like those .NET UI components in Visual studio, its template, and its logic isn't intended to support its logic, only to provide data source in it. Thats a truly problem of MVC design pattern, View is the weakest of all time. When you have a lot views, and to maintain them just even more painful..\n\nThe better way, AngularJS, to move the idea of MVC from server to client, did help to resolve this problem a lot. But not good enough, because we still don't have component, and then we can't re-use them, people said by AngularJS 1.x we can build component, and then I took a look at something like bootstrap/angular-ui, it looks good, but that just something you can change, not fully a component to support interface / state / data..\n\nReactJs might be better, but I just don't know so far, but to build a component and then package it, distribute it, that's the real key point, don't use those templateUrl to reference a HTML/CSS outside of it, but design it outside maybe, and build it into one JS/component at a time, thats quit necessary..\n\nSo View should be more like component, not just a template..",
        "created_utc": 1448292406,
        "upvote_ratio": ""
    },
    {
        "title": "When PM tells you how to improve performance",
        "author": "kortemy",
        "url": "https://www.reddit.com/r/programminghorror/comments/3txx1h/when_pm_tells_you_how_to_improve_performance/",
        "text": "Few years back, we were outsourced to some big German enterprise company. We were basically doing whitelabeling projects, serving content from this huuuuge, huge sluggish Java backend system. And to make things worse, the client application also consisted of Java server, and rendering HTML server-side.\n\nAt one point, things become very slow, and page render was sometimes well over 10 seconds. Our PM was, lucky for us, somewhat technically oriented, so he understood all our development pains. \n\nBut, given his technical background, he had the solution to all our problems.\n\n&gt; I want you to remove all application logging.\n\n&gt; Um, what?\n\n&gt; Yes. We should remove all application logging. That should improve page performance significantly. Logging writes data to disk, and that is a very expensive operation, we should remove all expensive and unnecessary operations.\n\n&gt; Well, technically, yes... But logging is essential, we need insight to how application behaves, how would we know if there are any errors...?\n\n&gt; But your code shouldn't have any errors, yes? Remove all logging, we need to improve performance as much as we can.\n\nAnd so I did.\n\nI quit roughly a month after that.\n\nEdit:\n\nSince all posts must contain code:\n\n`//fprintf(log, \"Error report\");`",
        "created_utc": 1448286830,
        "upvote_ratio": ""
    },
    {
        "title": "The PhD way to pass a list of booleans",
        "author": "uututhrwa",
        "url": "https://www.reddit.com/r/programminghorror/comments/3tto3x/the_phd_way_to_pass_a_list_of_booleans/",
        "text": "I am using this title cause it sounds kind of hilarious, and not as some kind of snide passive aggressive remark. This guy did have a PhD on neural networks or sth though, and while it doesn't surprise me cause the whole \"academic\" thing has taken a different direction (teach labs for free -&gt; get your phd) as of the last decade or so, I am kina bothered that he had also been teaching programming at a higher education institute for years.\n\n\nSo the code was about printing a report from an html form and basically  involved\n\n1) getting the user input from 5 checkboxes\n\n2) based on the t/f value of each add the data from the associated \"category\" to the report\n\n3) print back the checkboxes to the screen with the selected values set \n\n\nSo here is an attempt to recreate the code that did this\n\n     \"Controller.cs\"\n     \n     [HttpPost]\n     ActionResult PrintReport()\n     {\n      ...\n     //crazy ass spaghetti code\n     //crazy ass spaghetti code\n     //crazy ass spaghetti code\n\n     int sumType=1;\n     int category{name}Type=(bool)Request[\"category{name}TypeKey\"]? 2:1;\n     sumType*=category{name}Type;\n     int category{name}Type=(bool)Request[\"category{name}TypeKey\"]? 3:1;\n     sumType*=category{name}Type;\n     int category{name}Type=(bool)Request[\"category{name}TypeKey\"]? 5:1;\n     sumType*=category{name}Type;\n     int category{name}Type=(bool)Request[\"category{name}TypeKey\"]? 7:1;\n     sumType*=category{name}Type;\n     int category{name}Type=(bool)Request[\"category{name}TypeKey\"]? 11:1;\n     sumType*=category{name}Type;\n     model.getData(...,..., sumType);\n\n     //spaghetti code\n     ...\n     }\n\n      \"Model.cs\"\n      getData(...,..., sumType)\n      {\n       List&lt;ReportData&gt; returnObject= new List&lt;ReportData&gt;();\n       ....\n       \n        if(sumType==1 || sumType==2 || sumType==6 || sumType==10 || sumType==30..)\n         returnObject.AddRange(......)\n        if(sumType==1 || sumType==3 || sumType==6 || sumType==15 || sumType==30..)\n         returnObject.AddRange(......)\n        if(sumType==1 || sumType==5 || sumType==10 || sumType==15 || sumType==30..)\n         returnObject.AddRange(......)\n        if(sumType==1 || sumType==7 || sumType==14 || sumType==21 || sumType==30..)\n         returnObject.AddRange(......)\n         if(sumType==1 || sumType==11 || sumType==22 || sumType==33 || sumType==60..)\n         returnObject.AddRange(......)\n         .....\n      }\n       \n\nNow let me explain this bullshit. I was given a \"le agile methodology\" scrum ticket blah blah whatever they call it, to go to this code, and in 30-60 minutes, \"split one category in two subcategories, and find out why the report seems to give incorrect results\".\n\nNow when I saw this code above I was scratching my head and banging it against the wall for at least 30 minutes anyway, so since I suspect people might do the same, here is what the code  does: It takes the user input, turns true values to the first available prime number and false values to 1, multiplies these values, and produces the \"sumType\".\n\nLater on it attempts to recover the individual selections by some kind of crude and naive \"prime factor analysis\" of the \"sumType\".\n\nAfter I understood the author's intention, I was faced with this philosophical question: \"Why?\" Why you dumbass, seriously, what the fuck are you doing? Can't you just pass a list of bool values and iterate them or something? The only \"complication\" was that \"if nothing is selected then it is equivalent to all categories being selected\" but that wouldn't be hard to check either, what the hell are all these prime numbers for?\n\nI need to point out a few more things about why this code is so fucked up, other than the complete obvious reasons.\n\n1) In the getData method, he could just modulo-divide the number instead of attempting to check for each possible multiplication term.\n\n2) He missed a few multiplication terms which is why the whole thing didn't work\n\n3) Why the fuck would you turn the problem into something about prime factor decomposition in the first place?\n\n4) The longass fucking retard Java convention names he used for everything caused me dyslexia. I wrote category{name}Type but the {name} is supposed to be substituted by the actual category's name, which was 30 characters long. Why the fuck did he add both the prefix \"category\" and the suffix \"Type\" to it. And btw what the fuck is \"sumType\" supposed to mean. OK, I mean I get it that for some reason he wanted to multiply prime numbers in a variable, and add the suffix \"Type\" to it, but why in the name of Jaysus did he call it sumType and not at least fucking \"productType\" (since he is multiplying). What, is he so PhD he is thinking in logarithms? At first I thought the \"sumType\" was supposed to be something related to algebric data types in ML languages, not this benny hill level ridiculousness. And what is a \"returnObject\" and why did he use the 180 character long category{name}Type variables since all he does is multiply them to the product?\n\nNow there is a chance that he for some reason did this whole thing as a trick to test his phd skills or something, but for fuck's sake it's not. The svn history was showing how he had trouble with this report for a whole week (it probably begun from the \"none selected is equal to all selected\" requirement which confused him, and he had to do this \"prime factors\" thing to solve it). In addition the rest of the code he has been writing is the worst type of spaghetti code I've ever seen. It' usually like a) huge class b) 10 private member variables c) 20 methods that all return void most only get called once and directly mutate the private variables. And this guy was teaching programming at a college!\n\nAlso my job was incredibly difficult since to add the subcategories and fix the bug I had to calculate products of prime numbers for no reason. In fact he repeated the \"if (sumType== ....\" stuff in the code that printed the checboxes back to the screen, which added an extra layer of synchronization.\n\nI could go and ask him about this, and to fix his shit himself, since he is next office, but honestly I don't think I'll be able to communicate that good with this particular fellow homo sapiens. And he would somehow make it all worse. And all this guy talks about is GoT episodes and fucking scuba diving, when he's done with that he's on the loose perpetuating and commiting crimes against programming, it's all a lost cause\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "created_utc": 1448208753,
        "upvote_ratio": ""
    },
    {
        "title": "Reasonable method names",
        "author": "MetallicDragon",
        "url": "https://www.reddit.com/r/programminghorror/comments/3tlst9/reasonable_method_names/",
        "text": "Our Ruby on Rails application filters certain user types from different parts of the application. E.g. only admins can change certain settings, vendors or admins can submit invoices, etc. We have a few handy methods to apply these filters:\n\nis_super_admin, which only permits super admins. \n\nis_office_admin, which permits office admins (or higher).\n\nis_vendor, which permits any user *except* a vendor. What.  \n\n\nIt's not even noon and I've already given up today.",
        "created_utc": 1448049035,
        "upvote_ratio": ""
    },
    {
        "title": "Straight up negligence",
        "author": "MuffinsLovesYou",
        "url": "https://www.reddit.com/r/programminghorror/comments/3tlkny/straight_up_negligence/",
        "text": "Computers are just mind bogglingly fast.  I sometimes like to write junk programs that do nothing but huge brute force calculations just so I can watch the cpu blast it to bits.  \nDatabase engines are ridiculously fine tuned.  When I'm joining several multi-million line tables together and it is taking 2 milliseconds, it warms my cold heart.  \n\nSo when I see that a sql script is taking several minutes to run, I generally assume there is some negligent programming practices involved and I generally want to pick a fight with someone.  \n\n    select\n\t    BigA.ID -- gettin an id\n    from\n    \tBigA a  -- standard joins, the tables have millions of records but this is all super fast and standard\n\t    join BigB b\n\t    \ton a.IDA = b.IDA\n\t    \tand a.IDC = b.IDC\n\t    join BigC c\n\t    \ton c.IDC = b.IDC\n    where\n\t    c.EntityID = 12345\n\t    and a.ID not in (select distinct IDString from BigA where isnumeric(IDString) = 1) -- ok wtf is this  \n\nWithout that last little where filter, the select statement runs really quickly.  With that filter, it takes over a minute to run.  That same filter is used 4 different times in this script, so we're adding over four minutes to our execution time.  Now the icing on the cake is, I have no idea what IDString is or why it is important, I just know this script wants to exclude any BigA record with a numeric link like that.  The fact that IDString is a varchar rather than integer lets me know it was not originally created to be used for the link it is being used for here, someone just hijacked it at some point.  \n\nAnyways the fix:  \nCache the data set: \n \n    select cast(IDString as bigint) [IDString] into #LinkedBigA\n    from BigA where isnumeric(IDString) =1  \n\nand modify the where clause:  \n\n    --and a.ID not in (select distinct IDString from BigA where isnumeric(IDString) = 1) -- ok wtf is this\n    and a.ID not in (select IDString from #LinkedBigA)  \n\nThis cuts over four minutes off the execution time of the script.  Behold the profiler: http://imgur.com/a/gNTKe",
        "created_utc": 1448045773,
        "upvote_ratio": ""
    },
    {
        "title": "My dirty one-liner Java problem solution",
        "author": "spaceminions",
        "url": "https://www.reddit.com/r/programminghorror/comments/3t84mv/my_dirty_oneliner_java_problem_solution/",
        "text": "I want to preface this by saying that I am a student and was specifically trying to solve a simple programming problem on Codingbat.com in the easiest shortest code, not actually trying to solve the problem elegantly. \n\nThe problem was: Return true if the given string contains a \"bob\" string, but where the middle 'o' char can be any char.\n\n    public boolean bobThere(String str) {    \n    return ((\" \"+str+\" \").split(\"b[a-zA-Z0-9]b\").length-1)&gt;0;\n    }\n\n",
        "created_utc": 1447803762,
        "upvote_ratio": ""
    },
    {
        "title": "MVC is out, seriously",
        "author": "hellomaya",
        "url": "https://www.reddit.com/r/programminghorror/comments/3sx927/mvc_is_out_seriously/",
        "text": "I guess no one will agree with that, but..\n\nMVC is such a old tech to handle web application, and today things changed a lot, basically when we think about View part, mostly we don't have this at all, the example, is JSON API, where is View?\n\nAnd then about Model, to handle the business logic of database, Model isn't enough, usually it's representation of database table, but what about the logic is heavy, do you still make a FAT model there?!!\n\nController, the word Controller is misunderstanding, controller for what? Control Model or Control View, or we let you control it, doesn't make sense at all!!\n\nStreaming Pattern\n\nInstead, I believe there is an new pattern will replace MVC for web application, I think it could call Streaming Pattern, thinking about the Request/Response of HTTP, they are all stream, the stream just flow into by requests, and flow out by response..\n\nTo handle the streaming well, we certainly should use pipeline, that idea applied for more than thousands years, check everyday where you get the water, and what is annoying you mostly, of cause when the pipeline stuck..\n\nAnd the pipeline isn't just a narrow idea of a pipe in Unix/Linux terminology, it includes more, when you build the pipe, you actually build different branch, and the best pipe, is to handle different streaming well, and put them together to support the needs for your app..\n\nI am not a pipeline worker, so if you ask me how, I think we better ask the city engineer, and they do better work on that than software programmer, certainly.\n\nI saw an article to call \"software programmer isn't engineer\", make sense, programmer will never be engineer, comparing with engineer, they are playing with LEGO, and engineers play with real stuffs, just like the idea of MVC, sounds like LEGO, a child work.\n\nYou might ask me why I such critical, I am not that kind of person, but when I tried to find any proof or theory to back MVC pattern, I can find nothing...",
        "created_utc": 1447613379,
        "upvote_ratio": ""
    },
    {
        "title": "I can't even",
        "author": "Slaan",
        "url": "https://www.reddit.com/r/programminghorror/comments/3ssbtb/i_cant_even/",
        "text": "[removed]",
        "created_utc": 1447514232,
        "upvote_ratio": ""
    },
    {
        "title": "I can't even",
        "author": "Slaan",
        "url": "https://www.reddit.com/r/programminghorror/comments/3ss9n1/i_cant_even/",
        "text": "Just found this:\n\n    while(!previousFrom.get(previousFrom.get(prev)).equals(previousFrom.get(prev))){\n        prev = previousFrom.get(prev);\n    }",
        "created_utc": 1447513015,
        "upvote_ratio": ""
    },
    {
        "title": "Bang Bang Tilda!",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3sg0bl/bang_bang_tilda/",
        "text": "[deleted]",
        "created_utc": 1447271598,
        "upvote_ratio": ""
    },
    {
        "title": "final, final everywhere",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3sb5lq/final_final_everywhere/",
        "text": "[deleted]",
        "created_utc": 1447183194,
        "upvote_ratio": ""
    },
    {
        "title": "One liners are my favorite",
        "author": "Smokey_Circles",
        "url": "https://www.reddit.com/r/programminghorror/comments/3s49se/one_liners_are_my_favorite/",
        "text": "Strolling through code, implementing features when I discover this gem\n\n    public boolean calculateDealtInBase(String dealtCurrency, String baseCurrency) {\n        return dealtCurrency.equals(baseCurrency) ? true : false;\n    }\n\n...\n\n*EDIT because I should copy and paste and not re-type in a hurry",
        "created_utc": 1447064502,
        "upvote_ratio": ""
    },
    {
        "title": "[C++] My experience as a contractor, part deux: Testing",
        "author": "Acheronic",
        "url": "https://www.reddit.com/r/programminghorror/comments/3rprwr/c_my_experience_as_a_contractor_part_deux_testing/",
        "text": "In [my previous post](https://www.reddit.com/r/programminghorror/comments/3q2xhx/c_my_experience_as_a_contractor/), I described how the lead programmer was a doofus, and how to implement a simple button handler in 100,000 lines of code.\n\nSmall note about the lead programmer: he'd worked there as a contractor for 9 years before they'd decided to hire him. If in 9 years of highly-paid programming work he hadn't learned about null pointers, I have serious doubts about his ability to learn at all.\n\nMy job was to copy functionality from one version of the software to another. This entailed creating new classes that registered a few message handlers, which sent a return message. A typical such class would have some 20 one-line methods called from a switch statement, with message IDs taken from a giant header file with all the message IDs for all the different versions of the software. These IDs would fairly often overlap, and occasionally two different IDs would map to the same operation. Oh, and there were often a few IDs that differed only in spelling. Some of these misspelt IDs were never used. Don't ask.\n\nOne important aspect of my job was to do the unittesting. This looked basically like this:\n\n    void MyClassTester::Test()\n    {\n        MessageSender sender;\n        sender.init();\n        \n        std::vector&lt;char&gt; buffer;\n        Message result = sender.sendMessage(0x1010, buffer);\n        if (result.code == 0x10)\n        {\n            if (result.target == 9)\n            {\n                std::cout &lt;&lt; \"Initialized\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"FAILED\" &lt;&lt; std::endl;\n            }\n        }\n        else\n        {\n            std::cout &lt;&lt; \"FAILED\" &lt;&lt; std::endl;\n        }\n        \n        std::cout &lt;&lt; \"Testing module A\" &lt;&lt; std::endl;\n        result = sender.sendMessage(0x1026, buffer);\n        if (result.code == 0x10)\n        {\n            if (result.target == 9)\n            {\n                std::cout &lt;&lt; \"Done\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"FAILED\" &lt;&lt; std::endl;\n            }\n        }\n        else\n        {\n            std::cout &lt;&lt; \"FAILED\" &lt;&lt; std::endl;\n        }\n        \n        // Repeat structure for each method implemented.\n    }\n\nSee those hex numbers? Those are the message IDs mentioned above. Only of course the header file wasn't available in the test project, so everybody used raw hex numbers instead. Because copying a file is dangerous, and trying to keep two files synced is hard.\n\nI was wondering what this actually tested, since we don't look at the return value beyond checking that `code` is correct and that it was sent to the right target. So I made a simple test of my own - what happens if I send an absolutely bogus message ID? Well, `result.code` is indeed 0x10, and `result.target` is indeed 9. So, this is in fact only testing that the MessageSender does its job, and a single test would have been plenty. We had about 1000.\n\nOh, and notice that one test is ~20 lines of code. So ~20,000 lines of doing a single test over and over. I took the liberty of defining a function for it, reducing a ~500 line test file to ~30 lines. Would that I had leave to fix more than a few files.\n\nI took this to the lead programmer (despite his flaws he seemed more sensible than the project manager), who refused to believe me, even after I demonstrated the behavior. \"It's still doing something sensible\" he said, without being able to explain what this 'something' was.\n\nA few weeks later I looked at a different module in the system, and noticed it had a unittest folder. In fact, it had a unittest folder in every subfolder. Finally I could get some insight in how this stuff worked, without having to hold [^(G)64](https://en.wikipedia.org/wiki/Graham%27s_number) lines of code in my head (The whole project was some 2-3 million lines of code, and should have been 5-10,000). Eagerly I opened the .cpp file inside:\n\n    #define BOOST_TEST_DYN_LINK\n    #define BOOST_TEST_MODULE Test_1\n    #include &lt;boost/test/unit_test.hpp&gt;\n     \n    BOOST_AUTO_TEST_CASE(test_1)\n    {\n        BOOST_CHECK(true);\n    }\n\nThat's a test that doesn't fail often. There were a few hundred of these files, and every single one contained the exact same code, only the names were changed. I assume they were \"still doing something sensible\", and didn't look again.",
        "created_utc": 1446778792,
        "upvote_ratio": ""
    },
    {
        "title": "A few years ago, someone said their PM eliminated the need for comments with ridiculously long variable names. Does anyone still have a link to the original?",
        "author": "doubt",
        "url": "https://www.reddit.com/r/programminghorror/comments/3roh76/a_few_years_ago_someone_said_their_pm_eliminated/",
        "text": "I would have submitted to /r/tipofmytongue, but this is more obscure than a movie or a song.\n\nEdit: Some of you willingly do this. Please stop.",
        "created_utc": 1446758311,
        "upvote_ratio": ""
    },
    {
        "title": "SOMEONE PLEASE JUST DO IT!",
        "author": "Aly193",
        "url": "https://www.reddit.com/r/programminghorror/comments/3rngzn/someone_please_just_do_it/",
        "text": "I know I'm coping out, but i need help programming the following two assignments. I have given up and am overwhelmed. Feel free to report or delete this topic, its cool, I understand. Just thought I'd give it a shot. \n\nPython provides a find(substring, start, end) string method that returns the lowest index (integer) where the substring is found in the index range start ≤ index &lt; end. The start and end arguments are optional, but for this exercise, we will make them required. If the substring is not found -1 is returned.\n\nfind(input_string, substring, start, end)\nWithout using the find string method write a function that behaves exactly like the find string method. This means you’ll have to write a loop to do letter by letter comparisons. As your function is not a string method, the string to search must be an argument.\n\nmulti_find(input_string, substring, start, end)\nBiology researchers frequently want to find all the locations where a substring is found, not simply the first one. Write a function that, instead of returning one integer index, returns a string with zero or more indices separated by commas. In this case, the string will contain digits representing the integer indices. If the substring is not found, an empty string is returned. You may use the find function from part a.\n\n",
        "created_utc": 1446744387,
        "upvote_ratio": ""
    },
    {
        "title": "Under the Hood: Dalvik patch for Facebook for Android",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3rlpcc/under_the_hood_dalvik_patch_for_facebook_for/",
        "text": "[deleted]",
        "created_utc": 1446707921,
        "upvote_ratio": ""
    },
    {
        "title": "ancestral issues with Angular...",
        "author": "skipzero",
        "url": "https://www.reddit.com/r/programminghorror/comments/3rj0f2/ancestral_issues_with_angular/",
        "text": "    $scope.$watch('$parent.$parent.$parent.$parent.$parent.taskFilter', function (data) {\n        $scope.taskFilterVal = data || 0;\n    });",
        "created_utc": 1446663839,
        "upvote_ratio": ""
    },
    {
        "title": "ancestral issues with Angular.",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3riylw/ancestral_issues_with_angular/",
        "text": "[deleted]",
        "created_utc": 1446663199,
        "upvote_ratio": ""
    },
    {
        "title": "[iOS] It was difficult to write, so it should be difficult to read.",
        "author": "BR41N-FCK",
        "url": "https://www.reddit.com/r/programminghorror/comments/3rhbtl/ios_it_was_difficult_to_write_so_it_should_be/",
        "text": "Full horror on [StackOverflow](http://stackoverflow.com/questions/33515568/in-uicollectionviewcell-data-is-not-loading-initially/).\n\n    UICollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@\"ColCell\" forIndexPath:indexPath];\n\n    UILabel *lbl1=(UILabel *)[cell viewWithTag:1];\n    UILabel *lbl2=(UILabel *)[cell viewWithTag:2];\n    UILabel *lbl3=(UILabel *)[cell viewWithTag:3];\n    UILabel *lbl4=(UILabel *)[cell viewWithTag:4];\n    UILabel *lbl5=(UILabel *)[cell viewWithTag:5];\n    UILabel *lbl6=(UILabel *)[cell viewWithTag:6];\n    UILabel *lbl11=(UILabel *)[cell viewWithTag:11];\n    UILabel *lbl12=(UILabel *)[cell viewWithTag:12];\n    UITextView *txtvw = (UITextView *)[cell viewWithTag:7];\n    lbl1.text=[[tableArray objectAtIndex:indexPath.row]valueForKey:@\"strong_hand\"];\n    lbl2.text=[[tableArray objectAtIndex:indexPath.row]valueForKey:@\"athleticism\"];\n    lbl3.text=[[tableArray objectAtIndex:indexPath.row]valueForKey:@\"stick_skills\"];\n    lbl4.text=[[tableArray objectAtIndex:indexPath.row]valueForKey:@\"dodging\"];\n    lbl5.text=[[tableArray objectAtIndex:indexPath.row]valueForKey:@\"shooting\"];\n    lbl6.text=[[tableArray objectAtIndex:indexPath.row]valueForKey:@\"lacrosse\"];\n    lbl11.text=[[tableArray objectAtIndex:indexPath.row]valueForKey:@\"instructor_name\"];\n    lbl12.text=@\"INSTRUCTER\";\n    txtvw.text = [[tableArray objectAtIndex:indexPath.row]valueForKey:@\"comment\"];",
        "created_utc": 1446636614,
        "upvote_ratio": ""
    },
    {
        "title": "why we cant have nice things .sql",
        "author": "MuffinsLovesYou",
        "url": "https://www.reddit.com/r/programminghorror/comments/3qph3p/why_we_cant_have_nice_things_sql/",
        "text": "\"My drop down list has twice the items in it than should be there\".  Sounds simple enough, probably a database join missing a filter, or expecting a 1:1 rowset when one table has two or something simple like that.  \nAnd I mean, its a drop down list, so generally if you are populating it from the db, it is a simplish script to just load the set of keys and values.  \n(PM me if I failed to anonymize anything in here)\n\n    select distinct \n        null as Table15ID, c.Table1ID, c.Table1Name, c.ParentTable1ID\n        ,can.Table5ID, can.Table5Name2 + ' ' + can.Table5Name1 + isnull(' ' + can.Table5Name3),\n        ,o.Table3ID, oc.ID, o.Table3Title,\n        clc.Table7Name2 + ', ' + clc.Table7Name1,\n        po.Table8Number, cd.Table9ID, cd.Table9Desc, cc.Table10ID, cc.Table10Code, o.Table3Number,\n        s.Table12Desc, s.Table11ID, s.Table11Code, \n        case when isnull(FakeNoSql.Value, 'No') = 'Yes' then 1 else 0 end as [FakeNoSqlVal], null, null,\n        convert(varchar, isnull(r.Start, oc.Start), 101) as start,\n        convert(varchar, isnull(r.end, isnull(hwoc.end, isnull(cast(oc.end as datetime), '1/1/2200'))),101)as end,\n        convert(varchar, (min(isnull(wp.end,wp2.end)),101)as WeekEndStart,\n        convert(varchar, (max(isnull(wp.End,wp2.End)),101) as WeekEndEnd,\n        ws.Table13ID,\n        case when ws.Table13TypeID in (1,2) then ws.Table13TypeID \n            else 0\n        end as Table13TypeID\n    from\n        MyDataBase.dbo.Table1 c with (nolock)\n        join MyOtherDataBase.dbo.Table2 cp with (nolock) on c.Table1ID = cp.Table1ID\n        join MyDataBase.dbo.Table3 o with (nolock) on o.Table1ID = c.Table1ID\n        join MyDataBase.dbo.Table4 oc with (nolock) on oc.Table3ID = o.Table3ID\n        join MyDataBase.dbo.Alt_Table4 hwoc (nolock) on oc.ID = hwoc.Table4ID\n        join MyDataBase.dbo.Table5 can with (nolock) on can.Table5ID = oc.Table5ID\n        left join MyDataBase.dbo.Table6 cs with (nolock) on cs.Table1ID = c.Table1ID\n        left join MyDataBase.dbo.Table7 clc with (nolock) on clc.Table7ID = o.Table7ID \n        left join MyDataBase.dbo.Table8 po with (nolock) on po.Table8ID = o.Table8ID\n        left join MyDataBase.dbo.table9 cd with (nolock) on cd.Table9ID = o.Table9ID\n        left join MyDataBase.dbo.Table10 cc with (nolock) on cc.Table10ID = o.Table10ID\n        left join MyDataBase.dbo.FakeNoSql uda with (nolock) on uda.FakeNoSqlID = 100\n                                                            and uda.ThingTypeID = 4\n                                                            and uda.ThingID = o.Table3ID\n        left join MyDataBase.dbo.Table11 r with (nolock) on r.Table3ID = o.Table3ID and r.Table5ID = can.Table5ID\n        left join MyDataBase.dbo.Table12 s with (nolock) on s.Table12ID = r.Table12ID\n        inner join MyOtherDatabase.dbo.Table13 ws with (nolock) on ws.Table13ID = isnull(cp.Table13ID, 1)\n        left join MyOtherDatabase.dbo.Table14 wp with (nolock) on  wp.Table13ID = ws.Table13ID\n                                                                and wp.Start &lt;= isnull(isnull(hwoc.EndDate, oc.EndDate), '1/1/2200')\n                                                                and wp.End &gt;= oc.Start \n                                                                and wp.Start &lt; getdate()\n                                                                and wp.Start &gt;= dateadd(WW, -(12+1),getdate())\n                                                                and wp.Table1ID &lt;&gt; 12345\n                                                                and wp.End &gt;= dateadd(WW, -(12+1), getdate())\n        left join MyOtherDatabase.dbo.Table14 wp2 with (nolock) on wp2.Table13ID = ws.Table13ID\n                                                             and wp2.Start &gt;= DATEADD(ww, -54, GETDATE())\n                                                             and wp2.Start &lt;= ISNULL(r.End, GETDATE())\n                                                             and wp2.End &lt;= DATEADD(ww, 1, GETDATE())\n                                                             and ISNULL(r.Start, oc.Starting) &lt;= GETDATE()\n                                                             and wp2.Start &gt;= DATEADD(WW, -(12 + 1), GETDATE()) \n                                                             and ISNULL(r.End, '1/1/2200') &gt;= DATEADD(WW, -(12 + 1), GETDATE())\n                                                             and oc.Starting &lt;= GETDATE()\n                                                             and c.Table1ID = 12345                                             \n        WHERE c.Active = 1\n              AND ISNULL(cp.Table13ID, 0) &gt; 0\n              AND (ISNULL(o.Table7ID, -1) = ISNULL(ISNULL(@Table7ID, o.Table7ID), -1)\n                    OR ISNULL(oc.Table7ID, -1) = ISNULL(ISNULL(@Table7ID, oc.Table7ID),-1))    \n              AND (c.Table1ID = ISNULL(@Table1ID, c.Table1ID) \n                    OR c.ParentTable1ID = ISNULL(@Table1ID, c.ParentTable1ID))\n              AND oc.StageID IN (10,54)\n              AND oc.Table5ID = ISNULL(@Table5ID, oc.Table5ID)\n              AND ISNULL(hwoc.Close, GETDATE()) &gt;= DATEADD(WW, -(12 + 1), GETDATE())                                                          \n        GROUP BY\n            c.Table1ID, c.Table1Name, c.ParentTable1ID,\n            can.Table5ID, can.Table5Name2, can.Table5Name1, can.Table5Name3,\n            s.Description, s.Table11ID, s.Table11Code, FakeNoSql.Value,\n            r.Start, oc.Start, r.End, hwoc.Close, oc.End, ws.Table13ID, ws.Table14ID, clc.Table7Name2, clc.Table7Name1                                                 \n                                                             \n                                                         \n&gt;Now you can demonstrate how tough you are every time you have to debug it.  Why are you crying?  Real programmers don't cry.\n\nThis isn't the worst sql I have seen, and it probably isn't the worst you have seen.  The tables are well indexed so it runs quick, maybe even faster than getting the data from separate queries.  From a purely technical standpoint I think the only real flaw is the group by clause (20 column group by when you are only using aggregate functions on two columns...), and the compiler is amazing enough that that does not really matter that much.  \n  \nBut man does it suck to have to debug something like this.  Instead of 1 script to populate 1 drop down, this thing loads the data for 6 at a time.  Each script in isolation would be fairly trivial to fix if they get wonky, often less than 10 minutes to find the script and identify the issue.  But together like this in a big monolith, you have so many variables that are hard to isolate.  Likewise, they start interfering with each other, so that your list might be getting broke by the data of a separate list.  Unrelated or semi-related processes breaking each other is really hard to test as well because it isn't predictable.",
        "created_utc": 1446129049,
        "upvote_ratio": ""
    },
    {
        "title": "[C++] I spend much time to find the mistake",
        "author": "-128",
        "url": "https://www.reddit.com/r/programminghorror/comments/3qm1zp/c_i_spend_much_time_to_find_the_mistake/",
        "text": "The code is so simple, I couldn't understand why it kept crashing...\n\n    #include &lt;iostream&gt;\n    #include &lt;mutex&gt;\n    #include &lt;thread&gt;\n    #include &lt;queue&gt;\n     \n    using namespace std;\n     \n    class synchronized_queue\n    {\n    \tqueue&lt;int&gt; q;\n    \tmutex mtx;\n     \n    public:\n    \tint size()\n    \t{\n    \t\tunique_lock&lt;mutex&gt; lck(mutex);\n    \t\treturn q.size();\n    \t}\n     \n    \tvoid push(int x)\n    \t{\n    \t\tunique_lock&lt;mutex&gt; lck(mutex);\n    \t\tq.push(x);\n    \t}\n     \n    \tint pop()\n    \t{\n    \t\tunique_lock&lt;mutex&gt; lck(mutex);\n    \t\tint x = q.front();\n    \t\tq.pop();\n    \t\treturn x;\n    \t}\n    };\n     \n    synchronized_queue q;\n    const int count = 1e6;\n     \n    void task()\n    {\n    \tfor (int i = 0; i &lt; count; i++)\n    \t{\n    \t\tq.push(42);\n    \t}\n    }\n     \n    int main()\n    {\n    \tthread t1(task);\n    \tthread t2(task);\n     \n    \tt1.join();\n    \tt2.join();\n     \n    \tcout &lt;&lt; \"size = \" &lt;&lt; q.size() &lt;&lt; \" (should be \" &lt;&lt; count * 2 &lt;&lt; \")\" &lt;&lt; endl;\n    }\n\nhttp://ideone.com/H26J5H",
        "created_utc": 1446065584,
        "upvote_ratio": ""
    },
    {
        "title": "If you don't know how to make something work, just comment out the problem and test something else.",
        "author": "ElGuaco",
        "url": "https://www.reddit.com/r/programminghorror/comments/3qkbmc/if_you_dont_know_how_to_make_something_work_just/",
        "text": "Long story short, we had a crucial deadline to meet with a customer. We needed a working web service so that they could begin integration on their end. The good news is that it only needed to *just work enough* for testing and development, and we could shore it up properly later. The bad news is that it was way more work than we could handle by the deadline even with cutting corners. Management made the decision to hire overseas contractors to fill the gap. Which meant that a significant chunk of our time is reviewing their work to make sure it got done correctly.\n\nWe had a method to get some Object from another web service, and to keep it from being too chatty we setup an in-memory cache with an expiration. If the Object wasn't in the cache or had expired we would go ahead and call the other service to get it. Upon review we couldn't get multiple test runs to work on this bit of code. The cache would never invalidate and we couldn't ever change the cached Object. After spending several hours debugging and staring at the code, I finally noticed that the contractor had used the local date time to check the expiry date-time of the cache Object, but had used UTC date-time when storing the cache Object. Our servers are at least several hours behind UTC, so the expiry date which should have expired within a second was still valid for several hours.\n\nI opened a ticket to get them to resolve this and insisted they write unit tests (that they should have done in the first place) to verify the fix.\n\nIn the meantime, I updated the code in my git branch by updating the store cache item method to local time so my team could move forward with working code. I figured that the contractor would probably do the same fix or remove my fix in favor of his when a merge occurred. I should have not been so optimistic.\n\nWhen I was asked to verify their fix, I noticed that the contractor had changed the method for checking the cache Object from local time to UTC but kept my change of storing the Object with local time. So now it was incorrect in the opposite direction. I guess this was too difficult to fix because they decided to comment out the method that checked the cache collection so that the code always went to the service for the Object, effectively eliminating the cache mechanism completely.\n\nThe unit tests the contractor checked in didn't create the class under test. Instead, they created the cache collection in code, pretty much copy/pasted from the class under test to simulate what the class did. So the actual class methods never got tested, just some copypasta that resembled the class that should have been tested. And thus they fooled themselves into thinking their fix worked.\n\nI reopened the ticket. \n\n",
        "created_utc": 1446042540,
        "upvote_ratio": ""
    },
    {
        "title": "My co-worker approached me with a simple problem...",
        "author": "FoxxMD",
        "url": "https://www.reddit.com/r/programminghorror/comments/3qkagz/my_coworker_approached_me_with_a_simple_problem/",
        "text": "The library we use across a few projects isn't posting to the service it's for, but only for his project.\n\nHmm...I use this library in my project and have no problem with it. I check to make sure it's working for me -- yep no problem.\n\nSo then I ask him if he has debugged the library to see if it's behaving normally for him.\n\n&gt; Him: Oh I don't know I haven't used the debugger in months\n&gt; \n&gt; Me: &amp;#3232;_&amp;#3232;\n&gt;\n&gt; Me: What? Didn't I show you how to use this months ago?\n&gt;\n&gt; Him: Yeah, but I haven't really had any use for it\n&gt;\n&gt; Me : &amp;#3232;_&amp;#3232;\n\nSo I get him set up so he can debug (in IDEA..really simple process) and then proceed to guide him through putting up breakpoints and stepping into the troublesome method. \n\nWe find the point where a function is returning early (on a configuration check) but he accidentally steps past it...\n\n&gt; Me: Oops, went too far. Okay finish execution and we'll put a breakpoint on that function to see what's happening.\n&gt;\n&gt; Me: ...wait, why is there only one file open? Where are all the tabs for your open files?\n&gt;\n&gt; Him: Oh that? I got rid of that. I don't like it.\n&gt;\n&gt; Me: What? You...don't **like** having more than one file open at a time?\n&gt;\n&gt; Him: ...no (laughs)\n&gt;\n&gt; Me: [&amp;#3232;_&amp;#3232;](http://a0.web.wt-cdn.com/post_items/images/000/022/181/original/tumblr_m0ums40HRH1qi7upa.gif)",
        "created_utc": 1446042058,
        "upvote_ratio": ""
    },
    {
        "title": "You don't need to be *that* Object Oriented",
        "author": "uututhrwa",
        "url": "https://www.reddit.com/r/programminghorror/comments/3q9w7g/you_dont_need_to_be_that_object_oriented/",
        "text": "So 99% of this post is really only about just computing the damn standard deviation in C sharp. This can actually be accomplished in 5 minutes by searching for it in stackoverflow, here, copy pasted from the first result that came up:\n\npublic static double StdDev( IEnumerable&lt;double&gt; values)\n{   \n  double ret = 0;\n  if (values.Count() &gt; 0) \n  {      \n     //Compute the Average      \n     double avg = values.Average();\n     //Perform the Sum of (value-avg)_2_2      \n     double sum = values.Sum(d =&gt; Math.Pow(d - avg, 2));\n     //Put it all together      \n     ret = Math.Sqrt((sum) / (values.Count()-1));   \n  }   \n  return ret;\n}\n\nIt's really that fucking simple (or is it, the stack overflow code throws an exception on n=1, wtf, anyways) \n\n-------\n\nThere was this small (side) project made in a collaboration with a university, and it needed standard deviation calculations on some data gathered by sensors. \n\nThe project was implemented almost single handedly by one person, who was a seasoned software engineer le senior expert programmer professional... blah blah he was all quite proffesional and serious  \n\nAt some point he was going to leave to pursue a \"higher career opportunity\", and I was also assigned to it for it to get finished before he'd leave.\n\nThe thing is, the results the program was calculating, they were wrong, based on a validation against an older and known to be correct algorithm (which the university used).\n\nFrom their analysis they let us know that there might be a problem with the calculation of some standard deviations (amongst other things), so I had to find out if and where that happens.\n\nFirst thing I did was to search for his variation of the code I pasted above in case there was something wrong about it, and to my suprise, there wasn't any. I'm not saying there wasn't any mistake, there wasn't any goddamn function that calculated the standard deviation. Here is what he had done instead:\n\n- A \"Sensor\" class (and a pointless ISensor interface that only got implemented once and messed up the \"go to definition\" functionality in Visual Studio)\n\n- Inside the sensor class there was an IList&lt;double&gt; that had \"the sensor's stored values\"\n\n- Since in his design the list was supposed to be private he had a \"GetValues\" function. Except since by default some values were to be dicarded, the function had extra logic in it. In addition since the logic that was supposed to discard things could be different per sensor, and instead of him having some kind of \"Func&lt;bool&gt;\" to be supplied, he had a switch (inside GetValues) based on the sensors \"Name\" field, and in the switch he performed whatever stuff he needed for the filtering. The end result was of course that the code was also 200 lines long and pointlessly difficult to understand. He also had a clone of it (which was also supposed to be synched on changes) called GetValuesFOR_[alternative operaton], since like I said he was using hard coded switches instead of some supplied predicate or something, and once another set of conditions was introduced, the original \"GetValues\" couldn't be used again.\n\n- The sensors were instantiated in basically a \"multiton\" (dictionary of singletons or sth), except it was with public static variables, and involved both an ORM and some complicated and blatantly badly designed \"public static Initialize\" function that did like 10 different things. (I am mentioning this because it is the reason he would later not be able to call \"new Sensor()\" and make things work, you'll see what I mean)\n\n- So I was scanning like an idiot for the part where he actually computed a fucking standard deviation and I couldn't find it. So it turns out he had a \"public void SetAveragesAndDeviations ()\" method on the sensor class. This did both things (low cohesion) and directly affected the sensor's state (double Mean, double Deviation etc.) instead of returning a result. It also called \"GetValues\" inside it.\n\n- The thing is though, he also needed the deviation in other steps of the algorithm that didn't involve just one sensor. So I was like wtf? How was he going to do that? \n\n- Remember how I said he couldn't intantiate the Sensor class because of some bizzare spaghetti code like depedencies and initalizations on it? Well dis nigga, when he had to compute the standard deviation anywhere in the program, instead of using the function I pasted in the beginning of the post, he did the following:\n\n1) Got the \"first sensor\" from the multiton \n\n2) Copied all the values it had to a temporary location\n\n3) Inserted to the sensor the values he needed to calculate the deviation for\n\n4) Called  SetAveragesAndDeviations () on the sensor\n\n5) Copied the deviation from the sensor\n\n6) Cleared the Mean and Std from the Sensor\n\n7) Put back the old stored values to the sensor\n\n8) Called SetAveragesAndDeviations ()  again\n\n9) DONE\n\nI mean what the fuck is this idiot doing? All of these steps being performed \"in the middle of the program\" introduced \"points of error\" everywhere. The above steps were all useless. The deviation could be all wrong because SetAveragesAndDeviations () called \"GetValues\" which had a switch on 10 cases and about 25 if else blocks in it. What the hell is going on can't he just supply a list?\n\nAll the above in conjuction with a few other issues that were to be investigated made the whole deal (not a particularly complex algorithm) a rubik cube of spaghetti code. If you have to scan 1000 lines of synchronization code to see if it computes the stdev correctly, imagine how fucked up the rest of the program was. The algorithm also took 25 hours (seriously, because of something related to orm selects) to complete, while in the final version it was done in 6 seconds.\n\nTrying to reason with that guy was also pointless. Everything was dilluted to platitudes about a \"developer's meeting\" on \"exploring refactoring possibilities\", or he would look like he took everything very personaly and you weren't a \"professional team player\" seriously I swear to god, if he hadn't left to become a project lead leader architect or whatever I'd be 100% insane by now. From what I understood though he considered his way more correct because it was \"sending messages to objects and thus it is more object oriented\".\n\nThe example might also serve as a demonstration of the \"avoid the use of state\" thing mentioned in functional programming. It used state instead of a function list&lt;double&gt;-&gt;double and this quickly turned everything into unmanageable spaghetti code.\n",
        "created_utc": 1445864173,
        "upvote_ratio": ""
    },
    {
        "title": "iOS",
        "author": "adi1133",
        "url": "https://www.reddit.com/r/programminghorror/comments/3q9pun/ios/",
        "text": "\n    extension UIButton {\n        class func navigateButtonForSelector(selector: Selector, withController controller: UIViewController) -&gt; UIButton {\n            let button: UIButton = UIButton(type: UIButtonType.Custom)\n            button.frame = CGRectMake(0, 0, 40, 40)\n    \n            button.setImage(UIImage(named: \"navigateActionIcon\"), forState: UIControlState.Normal)\n            //button.setTitleColor(UIColor.appOrange(), forState: UIControlState.Normal)\n    \n            button.addTarget(controller, action: selector, forControlEvents: UIControlEvents.TouchUpInside)\n    \n            return button\n        }\n    }\n\nand later a single usage of\n\n    UIButton.navigateButtonForSelector(...)\n\n",
        "created_utc": 1445860474,
        "upvote_ratio": ""
    },
    {
        "title": "[C++] My experience as a contractor",
        "author": "Acheronic",
        "url": "https://www.reddit.com/r/programminghorror/comments/3q2xhx/c_my_experience_as_a_contractor/",
        "text": "My contract with a large company was terminated a few months back, and I feel it's time to share. This was my first project as a private contractor. I'm posting this on a throwaway to protect innocent and nocent alike.\n\nMy second day there, me and another contractor have a meeting with the lead programmer on the project. We ask him why the code he writes so very often looks like this (C++):\n\n    MyClass *p;\n    p-&gt;someFunc();\n\nDoesn't he know that p will be null or even just random garbage, and calling a function on it will only work if it's non-virtual and doesn't touch the *this* pointer in any way? Answer: nope, he does not. He sees no problems with this and we spend half an hour explaining it to him - to very little avail. I guess a few warning lights should have started flashing right about now.\n\nAfter the meeting we finally have access to the code and can start doing sensible things. So I open a file that reads a \"JSON\" file. As the quotes indicate, it's not really JSON, but the format is only used inside this one application, so it's not a big problem, only stupid. The code for getting information from this format looked like this:\n\n    for (JSON::Iterator iter = json.first(); iter != json.last(); iter = json.next()) {\n        if (iter-&gt;key == \"key_1\") {\n            if (iter-&gt;type == JSON_ARRAY) {\n                int n = 1;\n                for (JSON::Iterator i2 = iter-&gt;first(); i2 != iter-&gt;last(); it = iter-&gt;next()) {\n                    n++;\n                    if (n == 3) {\n                        string value = iter-&gt;nodes[n].value;\n                        istringstream stream(value);\n                        int intValue;\n                        buffer &gt;&gt; intValue;\n                        m_key_1 = intValue;\n                    }\n                }\n            }\n        }\n\t\t// Repeat above structure for 36 more keys, changing only \"key_1\" and m_key_1\n    }\n\nNeedless to say, this could have been done a *lot* more succinctly with but a single helper function. Also, what the hell is that inner loop for?\n\nNext up, the product I was working on had a physical panel with 24 buttons on it. There was an FPGA reading button states and mapping it to a bitfield in a specific memory location. This should be easy to do, right? One class with a get_button(int index), or if you want to go fancy, you might have a Button class with a constructor that takes the bit index, and that's it. 200 lines of code, maybe? Right? Right?\n\nOf course not. We need a Button1 class, a Button2 class, a Button3 class, and so on for each button. So that's 24 classes. With no common superclass of course, because that would make sense. Wait, what if someone wants to know not if the button is down, but if it's up? So we make another 24 classes, carbon copies of the others, except the get_value() function return value is inverted. Now we're getting somewhere. Oh, and the lead programmer had apparently heard of [pimpl](https://en.wikipedia.org/wiki/Opaque_pointer), so make that another 48 classes. We now have 96 classes (classes! Not objects) to deal with 24 buttons. And the implementation classes should be singletons, since there's no need to have more than one of each. Added bonus is we can make it thread safe by adding a static mutex in the interface class and protecting all access to the implementation with this mutex. Gods, I fucking *wish* I was making this up. All in all, this is ~100,000 lines of code. To read 24 fucking buttons. Fuck.\n\nThe product came in 7 or 8 different versions. Different hardware, different OS, different memory locations for the button states. So of course there were different versions of the code for each of these. As we all know, only doodieheads use #ifdef, so there were 7 or 8 copies of everything. Exact same code at first, then slowly diverging so that a fix in one branch couldn't be applied in another.\n\nI and the other contractor I mentioned did a quick estimate and found that the two of us could most probably have rewritten the entire application from scratch in &lt;6 months with &lt;1% of the code. When we mentioned this, we were both fired. I really don't mind.",
        "created_utc": 1445724386,
        "upvote_ratio": ""
    },
    {
        "title": "[C#]MVP...ish",
        "author": "MuffinsLovesYou",
        "url": "https://www.reddit.com/r/programminghorror/comments/3pipkm/cmvpish/",
        "text": "I'm back for my /r/programminghorror therapy.  \n\nSo we have three class libraries that serve as the core of a couple applications.   \n\n* TimeModel.dll  \n* TimeView.dll  \n* TimeProcessor.dll  \n\nSo you guess you will have an architecture roughly like:  \n\n* Model holds the object models  \n* View holds some custom user controls and captures user events  \n* Processor unifies the two for the programmer  \n\nsomething like that. Instead you get this pattern:  \n\n    \n    private class TimeView \n    { \n        TimeProcessor proc = new TimeProcessor(); \n        public void ExampleMethod() { proc.ExampleMethod(); } \n    }\n    private class TimeProcessor \n    { \n        TimeModel mod = new TimeModel(); \n        public void ExampleMethod() { mod.ExampleMethod(); } \n    }\n    private class TimeModel : ITimeModel\n    {\n        public void ExampleMethod() { /* Do stuff */ }\n    }\n\n    private interface ITimeModel\n    {\n        public void ExampleMethod();\n    }\n \n \nSo for any method, there are two redundant calls for it in the unnecessary .dll layers, and one addition of it to the ITimeModel interface.  You may think that the interface is there so that you can have one set of core functionality, and new implementations of the interface can hold client-specific code, but that is not the case.  The core class is the one I was writing about two weeks ago, where I trimmed it down from 5000 lines to 3500 on a whim one afternoon.  There is no core functionality that would make an interface meaningful as the entire thing is ad hoc from top to bottom.\n",
        "created_utc": 1445363243,
        "upvote_ratio": ""
    },
    {
        "title": "[perl] Had to fix some old code today and stumbled upon this monster",
        "author": "Mienaikage",
        "url": "https://www.reddit.com/r/programminghorror/comments/3pcyn9/perl_had_to_fix_some_old_code_today_and_stumbled/",
        "text": "(strings and variables replaced with representative placeholders)\n\n    if ($var1[0] &lt; $var2[0]){\n    }\n    else{\n    \tif ($var1[0] &gt; $var2[0]){\n    \t\treturn 'identical string';\n    \t}\n    \telse{\n    \t\tif($var1[1] &lt; $var2[1]) {\n    \t\t}\n    \t\telse{\n    \t\t\tif($var1[1] &gt; $var2[1]) {\n    \t\t\t\treturn 'identical string';\n    \t\t\t}\n    \t\t\telse{\n    \t\t\t\tif($var1[2] &lt;= $var2[2]) {\n    \t\t\t\t}\n    \t\t\t\telse{\n    \t\t\t\t\treturn 'identical string';\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    }",
        "created_utc": 1445266515,
        "upvote_ratio": ""
    },
    {
        "title": "HTTP POST to serial port",
        "author": "icholy",
        "url": "https://www.reddit.com/r/programminghorror/comments/3osrbt/http_post_to_serial_port/",
        "text": "[removed]",
        "created_utc": 1444871308,
        "upvote_ratio": ""
    },
    {
        "title": "Programmers count from 0. No exceptions.",
        "author": "StrangelyBrown",
        "url": "https://www.reddit.com/r/programminghorror/comments/3ospyu/programmers_count_from_0_no_exceptions/",
        "text": "We've just hired a new programmer. He's a goldmine for bad code. He's not even on my team but I'm reviewing his commits just for fun. There's probably going to be more submissions from me, but here's just a little one to get you started:\n\n    int index = 0;\n\n    foreach (string line in lines)\n    {\n        if (index++ == 0)\n        {\n            continue;\n        }\n      \n        // Rest of the loop which doesn't mention index\n    }\n\nEdit: I've just realised I made this look worse than it is. The loop does READ index but doesn't write it, so there's no chance of it ending up 0 after the first iteration.  \nDouble edit: I just checked it and it actually doesn't mention index. Now I kinda see why he did that (using it like a 'first' bool) but still pretty silly.",
        "created_utc": 1444870722,
        "upvote_ratio": ""
    },
    {
        "title": "Over 36 lines of code to zero 9 variables",
        "author": "Wolfen1240",
        "url": "https://www.reddit.com/r/programminghorror/comments/3onnrs/over_36_lines_of_code_to_zero_9_variables/",
        "text": "    double[][] array1 = new double[3][3];\n    double[] array2 = new double[3];\n    //assume they already have some values we want to zero out\n    int i1 = 0;\n    int i2 = 1;\n    int i3 = 2;\n    double[] array3 = array1[i1];\n    double[] array4 = array1[i2];\n    double[] array5 = array1[i3];\n    \n    double d1 = 0.0;\n    double d2 = 0.0;\n    double d3 =  0.0;\n    \n    int i4 = 0;\n    int i5 = 0;\n    int i6 = 0;\n    \n    array3[i4] = d1;\n    array3[i5] = d2;\n    array3[i6] = d3;\n\nNow repeat this again with new variables for each index and for each entry of the array.\n\nEDIT: Forgot to make array3, array4 and array5 of type double[], not just double.\n    ",
        "created_utc": 1444781436,
        "upvote_ratio": ""
    },
    {
        "title": "Try, try again",
        "author": "levine0",
        "url": "https://www.reddit.com/r/programminghorror/comments/3oilti/try_try_again/",
        "text": "Found this beautiful snippet at work:\n\n    try\n    {\n        try\n        {\n            // One line of log output\n        } catch (...) { }\n    } catch (...) { }\n\nThis was not in production code, but still, not even mentioning the horrible exception \"handling\", how does one make a mistake like this and fail to... catch... it...",
        "created_utc": 1444692708,
        "upvote_ratio": ""
    },
    {
        "title": "PGJDBC's Array handling",
        "author": "BowserKoopa",
        "url": "https://www.reddit.com/r/programminghorror/comments/3o51pv/pgjdbcs_array_handling/",
        "text": "Today, I was pondering the correct way to implement a Scala class that would effectively translate to an array of a composite type.\n\nDue to the nature of PGJDBC, the Java PostgreSQL driver, this has proven to be a somewhat obfuse task; however, I am almost finished.\n\nThat being said, if one takes a look at the place where the incoming (e.g. code going to the database, from the application) array data is converted in to an array literal _by the driver_, it's really quite absolutely and fundamentally stupid _and_ terrifying. You see, when the driver's implementation of `java.sql.PreparedStatement#setObject` is called, and that object satisfies the condition of `object instanceof java.sql.Array`, it will head on to `setArray` (a driver-specific function). `setArray`, rather than actually bothering with any of the functions provided by implementations of `java.sql.Array` simply calls `getBaseTypeName` on the Array object to look up the type OID from the database, and then [this little monstrosity](http://i.imgur.com/ncusKPg.png) is left up to the task of computing an array literal for the database. Oh. My. Fucking. What. The. Fuck.\n\n***This driver actually relies on the implementation having overriden `java.lang.Object#toString` and returning an array literal***. Now firstly, while there is an implementation of `java.sql.Array` specific to this driver, that is more used for communicating an array received _from_ database _to_ the client, and relies on being passed a connection object, and knowing ahead of time the OID for the type contained in the array. Secondly, this area of the driver has generally not been touched since 2004, and while the name of the class (`AbstractJdbc2Statement`) would suggest that it is old, each new `AbstractJdbcXStatement` inherits from earlier implementations, only implementing or overriding differing or new functionality. As such, that means that code for handling array exchange between the client application and the RDBMS is, and has been for roughly eleven years, significantly _lacking_, shall we say, in its safety. \n\nTo top it all off, this is not (to the best of my knowledge) really well documented anywhere. Either that, or too many people are asking shitty questions about it on SO and driving useful results down the search page.",
        "created_utc": 1444420616,
        "upvote_ratio": ""
    },
    {
        "title": "A horrifying API to get the GPS coordinates of the system",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3ns5ah/a_horrifying_api_to_get_the_gps_coordinates_of/",
        "text": "[deleted]",
        "created_utc": 1444179592,
        "upvote_ratio": ""
    },
    {
        "title": "Refactored.",
        "author": "MuffinsLovesYou",
        "url": "https://www.reddit.com/r/programminghorror/comments/3nqypm/refactored/",
        "text": "I have code samples and ~~complaints~~ a story today.  \n\nSo we have this one class library.  This fucking thing.  I'm going to save some of it for another post because otherwise this would be too long.  Instead I'm just going to focus on one file of the one library (it was actually a holy trinity of three libraries that were at the same time one library, but again, saving it for later).  \n\nSo you're programming in an object oriented language, and you need to get some tabular data from your database (C# with a MSSql rdbms, simple stuff).  You may be tempted to create objects to parse, organize, and hold that data so that it can be used consistently, but that is incorrect.  I know it is incorrect because the guy who made three times as much as I do rarely did that, and he wrote this library/file.  \nThe way the guy who made three times as much as I do does it is that if you need a datatable, you just create a method that calls the stored procedure, gets the data table, and returns it verbatim.  This has an advantage: it is really quick to write, none of that mucking about with deserializing and properties and constructors and whatnot.  If you need to alter the data set, just create a new stored procedure, or modify the current one so that it behaves differently (returns different columns) depending on the parameters you pass in.   If you need to change your paramters, just clone your method.  (&lt;/s&gt;)\n\nSo this file got up to about 5000 lines at one point with most of that being just single-serving methods to call stored procedures and return raw data tables.  If you have ever done debugging on a 5000 line code file, you find that you get really annoyed at your mouse's scroll wheel.  I got bored/annoyed one afternoon and saw that there was a bit of redundancy in this so I did some refactoring:  \n\n            public DataTable GetTimesheetsForContactWeekending(int ContactID, DateTime WeekEnding, int ClientID, int CostCenterID, int CustDeptID, int PurchaseOrderID, int RegExpBothFlag, bool DetailByTask, int TSStatusID) { return GetTimesheetsForContactWeekending(ContactID, WeekEnding, ClientID, CostCenterID, CustDeptID, PurchaseOrderID, RegExpBothFlag, DetailByTask, TSStatusID, string.Empty, 0); }  \n        public DataTable GetTimesheetsForContactWeekending(int ContactID, DateTime WeekEnding, int ClientID, int CostCenterID, int CustDeptID, int PurchaseOrderID, int RegExpBothFlag, bool DetailByTask, int TSStatusID, int CandidateID) { return GetTimesheetsForContactWeekending(ContactID, WeekEnding, ClientID, CostCenterID, CustDeptID, PurchaseOrderID, RegExpBothFlag, DetailByTask, TSStatusID, string.Empty, CandidateID); }  \n        public DataTable GetTimesheetsForContactWeekending(int ContactID, DateTime WeekEnding, int ClientID, int CostCenterID, int CustDeptID, int PurchaseOrderID, int RegExpBothFlag, bool DetailByTask, int TSStatusID, string vOrderNumber) { return GetTimesheetsForContactWeekending(ContactID, WeekEnding, ClientID, CostCenterID, CustDeptID, PurchaseOrderID, RegExpBothFlag, DetailByTask, TSStatusID, vOrderNumber, 0); }  \n        public DataTable GetTimesheetsForContactWeekending(int ContactID, DateTime WeekEnding, int ClientID, int CostCenterID, int CustDeptID, int PurchaseOrderID, int RegExpBothFlag, bool DetailByTask, int TSStatusID, string vOrderNumber, int CandidateID)\n        {  \n\nEach of these methods was a complete clone of the others, fully building the database connection, calling it, getting the return data, and then doing some other obnoxious stuff.  By just overloading these to all call the same method like this, I removed 1500 lines of code in an afternoon.  If I were being paid by the line, I think I would have indebted myself to the company for a couple days of work.",
        "created_utc": 1444161383,
        "upvote_ratio": ""
    },
    {
        "title": "[PHP] Let's create a new empty object",
        "author": "superice",
        "url": "https://www.reddit.com/r/programminghorror/comments/3npful/php_lets_create_a_new_empty_object/",
        "text": "One of my colleagues wrote this gem:\n\n    $newobject = (object) null;\n\nApparently he hadn't heard of StdClass\n",
        "created_utc": 1444139195,
        "upvote_ratio": ""
    },
    {
        "title": "Best auth scheme evAR!",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3na6sh/best_auth_scheme_evar/",
        "text": "[removed]",
        "created_utc": 1443826004,
        "upvote_ratio": ""
    },
    {
        "title": "Fixed-length Variable arguments",
        "author": "kerbals_must_die",
        "url": "https://www.reddit.com/r/programminghorror/comments/3n9c0q/fixedlength_variable_arguments/",
        "text": "Found this earlier today in the murky depths of an XML parser. I guess it's one way of avoiding expensive loops...\n\n\n    private boolean foo(String... filePaths) {\n        if (filePaths.length != 1) {\n            return false; // completely unused return value\n        }\n        else {\n             for (String file : filePaths) {\n                 // *massive* loop that parses the file\n             }\n             return true;\n        }\n    }",
        "created_utc": 1443812310,
        "upvote_ratio": ""
    },
    {
        "title": "[ruby] \"Hey you! Are you sure you ain't nothing?\"",
        "author": "wesha",
        "url": "https://www.reddit.com/r/programminghorror/comments/3n56b5/ruby_hey_you_are_you_sure_you_aint_nothing/",
        "text": "One of our developers wrote...\n\n    class SomeClass\n      def some_method\n        return if self.nil?\n        (...do some stuff...)\n      end\n    end\n\nMade me stop for a good five minutes and think over and over and over again — was there some deeply sacred meaning behind this that I have not gleaned in my 20 years of software development experience?\n\nThere wasn't.",
        "created_utc": 1443729865,
        "upvote_ratio": ""
    },
    {
        "title": "\"People assume that time is a strict progression of cause to effect but actually...\"",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3mw5vi/people_assume_that_time_is_a_strict_progression/",
        "text": "[deleted]",
        "created_utc": 1443566415,
        "upvote_ratio": ""
    },
    {
        "title": "Sometimes less isn't more",
        "author": "deraster",
        "url": "https://www.reddit.com/r/programminghorror/comments/3mjccp/sometimes_less_isnt_more/",
        "text": "So we had an assignment in my beginners programming class (C# 1 really) to create a function that converted kilometers to miles. Naturally, being that I have previous experience in C# and programming in general, this was my answer:\n\n    private float kmToMiles(float kms)\n    {\n        return kms * 0.621f\n    }\n\nHe took points off for \"lack of variables\". Note the instruction sheet specified no requirement about variable usage. Why would he not commend simplistic code?",
        "created_utc": 1443321387,
        "upvote_ratio": ""
    },
    {
        "title": "Sometimes you just have to be sure",
        "author": "MSpekkio",
        "url": "https://www.reddit.com/r/programminghorror/comments/3m898p/sometimes_you_just_have_to_be_sure/",
        "text": "Found in a old C# ASP application I'm upgrading:\n\n    DateTime dtSelected = ((DateTime)System.Convert.ToDateTime(DateTime.Now).Subtract(duration));",
        "created_utc": 1443118513,
        "upvote_ratio": ""
    },
    {
        "title": "My first job right out the gate",
        "author": "[deleted]",
        "url": "https://www.reddit.com/r/programminghorror/comments/3m521w/my_first_job_right_out_the_gate/",
        "text": "[deleted]",
        "created_utc": 1443055899,
        "upvote_ratio": ""
    },
    {
        "title": "Adding a button column to a grid.",
        "author": "MuffinsLovesYou",
        "url": "https://www.reddit.com/r/programminghorror/comments/3m3iy7/adding_a_button_column_to_a_grid/",
        "text": "[removed]",
        "created_utc": 1443032992,
        "upvote_ratio": ""
    },
    {
        "title": "I want to kill myself for this.",
        "author": "CyberSmoke3000",
        "url": "https://www.reddit.com/r/programminghorror/comments/3lfzkv/i_want_to_kill_myself_for_this/",
        "text": "    i = i + 1",
        "created_utc": 1442590614,
        "upvote_ratio": ""
    },
    {
        "title": "I want to kill myself. i = i + 1.",
        "author": "CyberSmoke3000",
        "url": "https://www.reddit.com/r/programminghorror/comments/3lfxk2/i_want_to_kill_myself_i_i_1/",
        "text": "[removed]",
        "created_utc": 1442589768,
        "upvote_ratio": ""
    },
    {
        "title": "Thanks for the comment, it helps!",
        "author": "ajd187",
        "url": "https://www.reddit.com/r/programminghorror/comments/3lfsd9/thanks_for_the_comment_it_helps/",
        "text": "Well this is useful, and I'm glad the code is still there if this is the case!\n\n    //This doesn't do anything",
        "created_utc": 1442587569,
        "upvote_ratio": ""
    },
    {
        "title": "Infinity is an integer, right?",
        "author": "lgroeni",
        "url": "https://www.reddit.com/r/programminghorror/comments/3lbnpg/infinity_is_an_integer_right/",
        "text": "Not the most WTF, but definitely made me question if the author knew why it didn't do anything:\n\n    // Check the number of \"serious\" errors. Could be used to avoid\n    // ingesting a particularly bad file. Does nothing currently\n\tArrayList&lt;String&gt; serious_errors = reports.getErrors();\n\t\n\tif (serious_errors.size() &gt; Double.POSITIVE_INFINITY)\n\t    logError(\"Fatal errors were reported! Cannot continue!\");\n\telse if (otherMode == true)",
        "created_utc": 1442509726,
        "upvote_ratio": ""
    },
    {
        "title": "Came across this Bad Boy while re-factoring some old code",
        "author": "sacredsock",
        "url": "https://www.reddit.com/r/programminghorror/comments/3laodz/came_across_this_bad_boy_while_refactoring_some/",
        "text": "\"Nick\" left the company about 3 years ago but his legacy still lives on. Today I came across this little wtf gem:\n\n    $start = date('Y',(date('U')-'604800')).'-'.date('m',(date('U')-'604800')).'-'.date('d',(date('U')-'604800'));",
        "created_utc": 1442494012,
        "upvote_ratio": ""
    },
    {
        "title": "Amazingly creative noop",
        "author": "Khez",
        "url": "https://www.reddit.com/r/programminghorror/comments/3l896l/amazingly_creative_noop/",
        "text": "I have no context to what the purpose of the following piece of code is.\n\nFrom the history of the file, it appears this was added as a single commit and never touched again.\n\n    $dataSub = (object)array_merge((array)$dataSub, array('status' =&gt; $dataSub-&gt;status));\n\nIt is worth noting that:\n\n* $dataSub is the result of json_decode\n* $dataSub-&gt;status is always present\n",
        "created_utc": 1442442076,
        "upvote_ratio": ""
    },
    {
        "title": "Forgive me for I have sinned. SQL to html email",
        "author": "applejacks24",
        "url": "https://www.reddit.com/r/programminghorror/comments/3l77yu/forgive_me_for_i_have_sinned_sql_to_html_email/",
        "text": "So cleaning up an old SQL instance at work, ran across this gem I wrote a few years ago. I am amazed it even worked.\n\n\nPass in a query, out comes a formatted html email.\n\n    -- =============================================\n    -- Author:\t\t\n    -- Create date: 2013-10-25\n    -- Description:\tSends a query as a html formatted email.\n    -- =============================================\n    CREATE procedure [dbo].[uspSendHTMLEmail]\n      -- Add the parameters for the stored procedure here\n      @query       nvarchar(max),\n      @sendTo      nvarchar(max),\n      @subj        nvarchar(max),\n      @rowColor    nvarchar(max) = #FFD9B0,\n      @headerColor nvarchar(max) = #F0AB6A,\n      @preText     nvarchar(max) = '',\n      @postText    nvarchar(max) = ''\n    as\n      begin\n          -- SET NOCOUNT ON added to prevent extra result sets from\n          -- interfering with SELECT statements.\n          set NOCOUNT on;\n    \n          /* Table the query is coppied to, for easier processing. */\n          if Object_id('tempdb..##DATA') is not null\n            drop table ##DATA\n    \n          /* Table used to minipulate data into the html table format */\n          if Object_id('tempdb..##htmlTable') is not null\n            drop table ##htmlTable\n    \n          declare @string nvarchar(max);\n    \n          /* Dump into a table that can be refenced. */\n          exec('select * into   ##DATA from   (' + @query + ') t1');\n    \n          declare @Header nvarchar(max) = '';\n          declare @Table nvarchar(max) = '';\n          /**************************\n          ******HEADER***************\n          * Creates the table header by looping through the coulmn names and \n          * and canonating the needed html tags.\n          **************************/\n          declare @ColumnCount int = (select Count(column_ordinal)\n             from   sys.Dm_exec_describe_first_result_set(@query, null, 0))\n          declare @i int = 0;\n    \n          while @i &lt; @ColumnCount\n            begin\n                set @i = @i + 1\n                set @Header = @Header\n                              + (select '&lt;td align=center&gt;&lt;b&gt;' + name + '&lt;/b&gt;&lt;/td&gt;'\n                                 from   sys.Dm_exec_describe_first_result_set(@query, null, 0)\n                                 where  column_ordinal = @i)\n            end\n    \n          /****************************\n          ***Data Table**\n          * Created the data html table markup by first creating a query, then selecting that query into a new table.\n          * the query's format is;\n          select '&lt;td&gt; + Column1 + &lt;/td&gt;&lt;td&gt; Column 2 &lt;/td&gt;...\n          *This query is then executed in an 'insert into' context, resulting in a table with formatted html, one row per table row.\n          * Next we loop though each row of the new table, catonating into one string.\n          ****************************/\n          set @ColumnCount = (select Count(COLUMN_NAME)\n                              from   tempdb.INFORMATION_SCHEMA.COLUMNS\n                              where  TABLE_NAME = '##DATA')\n          set @i = 0;\n    \n          declare @tmp nvarchar(max) = '';\n    \n          while @i &lt; @ColumnCount\n            begin\n                set @i = @i + 1\n                set @tmp = @tmp\n                           /* &lt;td&gt; + Column1 + &lt;/td&gt;&lt;td&gt; Column 2 &lt;/td&gt;... */\n                           + (select '''&lt;td&gt;'' + ISNULL(CAST([' + COLUMN_NAME\n                                     + '] as nvarchar(max)),'''') +  ''&lt;/td&gt;'' + '\n                              from   tempdb.INFORMATION_SCHEMA.COLUMNS\n                              where  TABLE_NAME = '##DATA'\n                                     and ORDINAL_POSITION = @i)\n    \n            end\n    \n          set @tmp = 'select ' + @tmp\n          set @tmp = left(@tmp, Len(@tmp) - 2)\n    \n          create table ##htmlTable\n            (\n               /* Single column, holds one line of forammted html */\n               formatted nvarchar(max)\n            );\n    \n          exec('insert into ##htmlTable ' + @tmp + ' from ##DATA')\n    \n          /* Add identity column to keep the order identical */\n          alter table ##htmlTable\n            add ident int identity(1, 1)\n    \n          set @ColumnCount = (select Count(*)\n                              from   ##htmlTable)\n          set @i = 0;\n          set @tmp = '';\n    \n          while @i &lt; @ColumnCount\n            begin\n                set @i = @i + 1\n                set @tmp = @tmp + case when (@i % 2 = 0) then '&lt;tr&gt;' + (select formatted from ##htmlTable where ident = @i) + '&lt;/tr&gt;' else '&lt;TR bgcolor=' + @rowColor + '&gt;' + (select formatted from ##htmlTable where ident = @i) + '&lt;/tr&gt;' end\n            end\n    \n          set @Table = @tmp\n    \n          declare @Body       nvarchar(max) = ''\n                  ,@TableHead nvarchar(max) = ''\n                  ,@TableTail nvarchar(max) = ''\n                  ,@Head      nvarchar(max) = ''\n                  ,@Tail      nvarchar(max) = ''\n    \n          /* Formatting and setup for the html table. */\n          set @tableTail ='&lt;/table&gt;';\n          set @tail = '&lt;/body&gt;&lt;/html&gt;'\n          set @head = '&lt;html&gt;&lt;head&gt;&lt;style&gt;'\n                      + 'td {border: solid black 1px;padding-left:5px;padding-right:5px;padding-top:2px;padding-bottom:2px;font-size:14pt;} '\n                      + '&lt;/style&gt;&lt;/head&gt;' + '&lt;body&gt;'\n          set @TableHead = '&lt;table cellpadding=0 cellspacing=0 border=0&gt;'\n                           + '&lt;tr bgcolor=' + @headerColor + '&gt;' + @Header\n                           + '&lt;/tr&gt;';\n          set @Body = @Table\n          /* Replace excaped chracters with the proper chracter. */\n          set @Body = Replace(@Body, '_x0020_', Space(1))\n          set @Body = Replace(@Body, '_x003D_', '=')\n          /* Catonate into one string to include in the eamil. */\n          set @Body = @head + + @preText + @TableHead + @Body + @TableTail\n                      + @postText + @Tail\n    \n          exec msdb.dbo.Sp_send_dbmail\n            @profile_name = 'LocalEmail',\n            @recipients=@sendTo,\n            @subject = @subj,\n            @body = @Body,\n            @body_format = 'HTML';\n    \n          print 'Email with subject ' + @subj + ' sent to '\n                + @sendto\n      end \n",
        "created_utc": 1442427026,
        "upvote_ratio": ""
    },
    {
        "title": "Let's access an object we know is null!",
        "author": "frobalt",
        "url": "https://www.reddit.com/r/programminghorror/comments/3l5eh0/lets_access_an_object_we_know_is_null/",
        "text": "Code:\n\n    if ((module == null || !module.ModuleId.HasValue) &amp;&amp; !ClearModuleIdInSession() &amp;&amp;\n    !SaveModuleIdInSession(module.ModuleId.Value)) return null;\n\nThis is actual code I've just found in the system I work on. It's C#.\n\nI've been wrong about programming horror stuff before, but I'm pretty sure I'm right about this:\n\nThe if statement is literally checking if either the object or a field in the object is null and then later trying to access it regardless.\n\nThe funny thing is, after it's caught the exception it would log it and then return null.\n\nEdit: It's 1 line in the code but I have made it 2 lines here so reddit doesn't wrap in the middle of a word.\n",
        "created_utc": 1442393719,
        "upvote_ratio": ""
    },
    {
        "title": "Best Legacy Code I Have Seen Yet",
        "author": "EnergyWasRaw",
        "url": "https://www.reddit.com/r/programminghorror/comments/3kjxen/best_legacy_code_i_have_seen_yet/",
        "text": "I work at an insurance company. Most all of our code is bad. This one method takes it to the next level. The funny part is - it's one of the most important actions in the application. I can't share it because I don't want to chance losing my job. Here are the statistics:\n\n- 783 lines long\n- 18 tabs deep at deepest point\n- 1 try\n- 1 using\n- 30 foreach loops\n- 6 foreach loops deep at deepest point\n- 95 if statements\n- 1 finally\n- 0 catch\n\n\nIf I was wondering why saving an item was so slow, I am no longer wondering. And no, I am not allowed to refactor it while I'm in there (not that I would want to anyway).",
        "created_utc": 1441985758,
        "upvote_ratio": ""
    },
    {
        "title": "Some solutions aren't clever. Or stupid. Or even solutions",
        "author": "Smokey_Circles",
        "url": "https://www.reddit.com/r/programminghorror/comments/3kj6pb/some_solutions_arent_clever_or_stupid_or_even/",
        "text": "I recently assisted an intern in fixing a bug in their code. The painful part was how long it took to get to the underlying issue. He was convinced a map was being cached and reloaded, I was convinced he was attempting a pass by reference.\n\n    public static void recordDealError(Map&lt;String, ValidationItem&gt; items) {\n        items = new HashMap&lt;&gt;();\n        items.put(\"SomeId\", new ValidationItem(\"Some error message\"));\n    }\n\nUnsurprisingly, the calling function did not contain any of the changes in the underlying map. I had a long debate with him until we finally hit the golden statement I was looking for\n\n&gt;How else do you clear a map then??\n\nOh, I dunno, `map.clear()` maybe? Gracious....",
        "created_utc": 1441973037,
        "upvote_ratio": ""
    },
    {
        "title": "Some programmers really don't get how IDs supposed to work.",
        "author": "hunyeti",
        "url": "https://www.reddit.com/r/programminghorror/comments/3kg50k/some_programmers_really_dont_get_how_ids_supposed/",
        "text": "I have had to use an in-house API, first it seemed to work, but when I sent more than 1 request in a short period, all of the returned the same resourceId.\n\nI couldn't imagine what is happening, the codebase is pretty large, and it took me almost a day to figure out. \n\n    function generateResourceId() {\n        return time() //Unix time stamp\n    }\n\n# what the hell?\n\nI talked to the guy who wrote it. I asked him not to use a timestamp for IDs, because we are going to need a lot more than one request per second. Of course, the first was a defensive answer that it did not happen to him (he didn't test it with more than one request per second...) and then agreed to change it.\n\nSome time passed, as a temp workaround I changed it in my branch.\n\nI was ready with my work, so I created a pull request. I forget that I left in my implementation, so there was a merge conflict. No biggie.\n\nI look at the conflicting code:\n\n    function generateResourceId() {\n        return microtime(true) //Return current Unix timestamp with microseconds as float\n    }    \n\nwell it's at least not constrained to one request per second... I guess...\n\n#some people just don't get Ids.\n\n\n",
        "created_utc": 1441914866,
        "upvote_ratio": ""
    },
    {
        "title": "Example program given to my friend in CS I",
        "author": "theplague42",
        "url": "https://www.reddit.com/r/programminghorror/comments/3kerqz/example_program_given_to_my_friend_in_cs_i/",
        "text": "My friend was given this program to debug in his second week of Computer Science I (he's a junior but just found out he has to take two programming courses). It takes command line arguments and prints them out with a count of how many are printed. His job was to fix the number of args printed, which was accomplished as noted. If that doesn't seem too bad, take a look at the FOR loop. Again, this is intended for people in their second week of college with little to no programming experience.\n\n    #include &lt;stdio.h&gt;\n    #include &lt;stdlib.h&gt;\n\n    /* print a given string and a number in a pre-determined format. */\n    void\n    print_string(int num, char* string)\n    {\n         printf(\"String '%d' - '%s'\\n\", num, string);\n    }\n\n    int\n    main(int argc, char* argv[])\n    {\n        int i;\n\n        /* check for command line arguments */\n        if (argc &lt; 2) { /* 2 - 1 for program name (argv[0]) and one for a param. */\n            printf(\"Usage: %s [&lt;string&gt; ...]\\n\", argv[0]);\n            return(1);\n        }\n\n        /* loop over all strings, print them one by one */\n        for (argc--, argv++, i = 1; argc &gt; 0; argc--, argv++, i++) //change the 1 to a 0, problem solved\n        {\n            print_string(i, argv[0]);  /* function call */\n        }\n\n        printf(\"Total number of strings: %d\\n\", i);\n        system(\"pause\");\n        return 0;\n    }",
        "created_utc": 1441898010,
        "upvote_ratio": ""
    },
    {
        "title": "Fun with bitwise operators (C#)",
        "author": "frobalt",
        "url": "https://www.reddit.com/r/programminghorror/comments/3k8mzx/fun_with_bitwise_operators_c/",
        "text": "If I could, I would make the word '*fun*' in the title italic.\n\nAnyway, this is paraphrasing, but I stumbled across code like this:\n\n    if((enumVar &amp; MyEnum.EnumVal) == MyEnum.EnumVal)\n\nI'll be honest here: I had to look up what a single &amp; operator did in C#, and when I found out was wondering why the hell this had been included here.\n\nEven though I'm not sure about legitimate uses for this sort of calculation, I did notice that the enum values were all powers of 2, so doing a bitwise operation on 2 different enum values would always result in a 0 outcome (which we assign to a value of 'Unknown').\n\nSo, in effect, doing a bitwise operator then comparing outcomes is pointless, as simply comparing the outcome would have been better. Although, this has the added bonus of fucking up if enumVar ever returns as MyEnum.Unknown...\n\nEdit: Thanks for the replies guys. Wasn't really sure what bitwise operations were used for. \n\nTo the guy who felt the need to be aggressive: I understood what bitwise operators were, just not what they were used for. \n\nEdit2: I know most people might think this is worth deleting, but I'll leave this here on the off-chance someone else sees it and is educated as to the use of bitwise operators.",
        "created_utc": 1441805224,
        "upvote_ratio": ""
    },
    {
        "title": "I'm so ashamed...(my attempt at checking for a partially solved sudoku)",
        "author": "goodguygreenpepper",
        "url": "https://www.reddit.com/r/programminghorror/comments/3k1arg/im_so_ashamedmy_attempt_at_checking_for_a/",
        "text": "So, for class I had to make a non-bruteforce sudoku solver. In order to check if any particular move would break it, I had to check for repeats in everything except empty spots, represented as zeros. Also, the sudoku grid is represented as one single dimensional array.\n\n\tprivate static boolean validColoms (int [] board){\n\tint repeated [] ;\n\tfor (int i = 0; i &lt; 9; i++){\n\t\trepeated = new int[10];\n\t\tfor (int j= 0; j&lt;9; j++){\n\t\t\tif((++repeated [ board[(j*9)+i] ] &gt;= 2) &amp;&amp; (board[j*9+i] != 0))\n\t\t\t\treturn false;\n\t\t}\n\t}\n\t\treturn true;\n\t}\n\t\n\tprivate static boolean validRows (int [] board){\n\t\tint repeated [] ;\n\t\tfor (int i = 0; i &lt; 9; i++){\n\t\t\trepeated = new int[10];\n\t\t\tfor (int j= 0; j&lt;9; j++){\n\t\t\t\tif((++repeated [ board[(i*9)+j] ] &gt;= 2) &amp;&amp; (board[i*9+j] != 0))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\treturn true;\n\t}\n\n\tprivate static boolean validGrids (int [] board){\n\t\tfor (int i = 0; i &lt; 3; i++){\n\t\t\tfor (int j = 0; j &lt; 3; j++){\n\t\t\t\tint repeated [] = new int[10];\n\t\t\t\tfor (int k = 0; k&lt; 3; k++ ){\n\t\t\t\t\tfor (int l = 0; l &lt; 3; l++){\n\t\t\t\t\t\tif((++repeated [ board[(i*27)+(j*3) + k*9 + l] ] &gt;= 2) &amp;&amp; (board[(i*27)+(j*3) + k*9 + l] != 0))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}",
        "created_utc": 1441673762,
        "upvote_ratio": ""
    },
    {
        "title": "How Not to Ruby (aka Instance-Variable and Extend Hell)",
        "author": "Stovek",
        "url": "https://www.reddit.com/r/programminghorror/comments/3jru7i/how_not_to_ruby_aka_instancevariable_and_extend/",
        "text": "Let's first throw this out there: Ruby can be a bizarre language. For those unfamiliar with it's workings, here's an example of a Class that doesn't look at all terrifying:\n\n    Class MyClass\n        @var1 = 5\n\n        def get_var\n            @var1\n        end\n    end\n\n    my_class = MyClass.new\n    puts my_class.get_var\n\nNow, the question is: what does *get_var* return in that final line? If you guessed 5, you would be wrong. It returns *nil*.\n\n@var1 being 5 is pinned to the class definition, not the my_class object. If we wanted the value 5, we would have to do this:\n\n    MyClass.instance_variable_get(:@var1)\n\nAlternatively, we could create a constructor for the class, but that solution is not relevant (nor helpful) for the nightmare situation ahead. You with me on **instance variables**?\n\nTo realize true horror, we can't just talk about classes anymore. We need to talk about Modules. Modules are basically namespaces. Doesn't sound too bad, except for when you add in a certain keyword: **extend**. This is completely valid (and is the basis of what I deal with at my day job):\n\n    Module BasicallyANamespace\n        @var1 = 5\n\n        def some_getter\n            @var1\n        end\n\n        def some_setter(new_val)\n            @var1 = new_val\n        end\n    end\n\n    Module AnotherNamespace\n        extend BasicallyANamespace\n    end\n\nNow *AnotherNamespace* contains all the methods from *BasicallyANamespace*. With our instance variable friend, though, remember that these are two different things:\n\n    BasicallyANamespace.some_getter # 5\n    AnotherNamespace.some_getter    # nil\n    AnotherNamespace.some_setter(10)\n    BasicallyANamespace.some_getter # still 5\n    AnotherNamespace.some_getter    # 10\n\nAt work, we have an in-house Ruby Library developed by another team. Unfortunately, it was developed by a team that didn't seem to understand Object-Oriented programming, though that's maybe what they were wanting...? The result is a monstrosity of modules that all want to behave like classes, but are just free-floating methods.\n\nThe problem here is that the main library extends everything. And I mean *everything*. It doesn't sound like a problem when you think you could just call any method by name without the prefix and just avoid any instance-variable confusion, right guys? ...Right?\n\nOh wait, did I mention methods with the same name overwrite each other? And that Ruby doesn't have the concept of overloading methods?\n\n    Module FirstModule\n        def some_getter\n            puts 'First!'\n        end\n    end\n\n    Module SecondModule\n        def some_getter\n            puts 'Second!'\n        end\n\n        extend FirstModule\n    end\n\n    SecondModule.some_getter # First!\n\nSo a couple ground rules are set at work for \"best practice\":\n\n* Ensure a method name is not already in use by the library\n    * **Note:** As we're using the library's base functionality but essentially extending it, this can be surprisingly difficult at times to create clean method names\n* **Never** call a method preceding with the namespace, because instance variables being nil **will** cause code to break\n* **Never** edit code in the library, as your manager watches check-ins and **will** inform the team that created the library that enhancements have been made. Even if it is discovered that the original code were to leak personal information from everyone within the company, it will be reverted\n\nIt really is the most dysfunctional program I've ever worked on. And it runs sluggish as hell. No wonder, since practically *all variables* are instance variables that want to be globals.\n\nThis is also the first time I've used Ruby. I actually love the language on its own, but work is trying really hard to force me to hate it. *Sigh*... Man, I need a better job.",
        "created_utc": 1441479170,
        "upvote_ratio": ""
    },
    {
        "title": "Because explode() is too simple",
        "author": "reddeth",
        "url": "https://www.reddit.com/r/programminghorror/comments/3jmpda/because_explode_is_too_simple/",
        "text": "I work in a PHP shop (I know, I know), and we have a report built by a programmer that recently left. Honestly, we've all just sort of let his reports run and not pay attention to them. **Oh god I wish we would have**\n\nFirst of all, let's look at what he needs: He needs an array of phone numbers. There's a lot of ways to do this. We could make a request to our API to grab the phone numbers, or store them in the DB, hell we could even put them into a separate file and just include it. You know what we shouldn't do? HARD CODE THE 700+ PHONE NUMBERS DIRECTLY INTO THE REPORT THEY'RE RUNNING.\n\nAlright, alright, fine, it's hard coded in there. But it's not a giant array. Oh no, that would be far too simple. It's a string. 700+ phone numbers. All in one. Giant. String. Separated by newlines. God help me.\n\nOkay, well, we can work with that, right? Let's just do an explode(\"\\n\", $phones) right? Nope, too complex. Let's do this instead:\n\n    private function converterStringToLineArray($s) {\n        if (empty($s)) {\n            return array();\n        }\n        $h      = fopen('php://memory', 'rw'); //csv file in memory\n        fwrite($h, $s);\n        rewind($h);\n        $bLoop  = true;\n        $a      = array();\n        do {\n            $sLine = fgets($h);\n            if ($sLine !== false) {\n                $a[] = $sLine;\n            } else {\n                $bLoop = false;\n                fclose($h);\n            }\n        } while ($bLoop );\n        return $a;\n    }\n\nIn case it's not clear what's happening here, we're creating a new file in PHP's internal memory, writing the gigantic string of newline-separated phone numbers to the file, then using PHP's built in internal CSV parser to read each line into a new array, then returning that array finally.\n\nYeah.",
        "created_utc": 1441381245,
        "upvote_ratio": ""
    }
]